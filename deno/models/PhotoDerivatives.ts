/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
/**
 * If no derivative photos are available, this attribute is omitted rather than empty.
 * @export
 * @interface PhotoDerivatives
 */
export interface PhotoDerivatives {
    /**
     * The URL to derivative image.
     * Derivative images are alternate versions of the original image (e.g., smaller versions used to improve page-load times on your site). They are primarily used with our Pages product.
     * @type {string}
     * @memberof PhotoDerivatives
     */
    readonly url?: string;
    /**
     * Derivative photo width.
     * @type {number}
     * @memberof PhotoDerivatives
     */
    readonly width?: number;
    /**
     * Derivative photo height.
     * @type {number}
     * @memberof PhotoDerivatives
     */
    readonly height?: number;
}

export function PhotoDerivativesFromJSON(json: any): PhotoDerivatives {
    return PhotoDerivativesFromJSONTyped(json, false);
}

export function PhotoDerivativesFromJSONTyped(json: any, ignoreDiscriminator: boolean): PhotoDerivatives {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': !exists(json, 'url') ? undefined : json['url'],
        'width': !exists(json, 'width') ? undefined : json['width'],
        'height': !exists(json, 'height') ? undefined : json['height'],
    };
}

export function PhotoDerivativesToJSON(value?: PhotoDerivatives | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}


