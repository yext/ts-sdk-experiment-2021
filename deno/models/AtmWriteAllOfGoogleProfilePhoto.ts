/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
/**
 * The profile photo for the entity's Google profile
 * 
 * 
 * Image must be at least 250 x 250 pixels
 * 
 * Image may be no more than 500 x 500 pixels
 * 
 * Supported Aspect Ratios:
 * * 1 x 1
 * 
 * **NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.
 * @export
 * @interface AtmWriteAllOfGoogleProfilePhoto
 */
export interface AtmWriteAllOfGoogleProfilePhoto {
    /**
     * 
     * @type {string}
     * @memberof AtmWriteAllOfGoogleProfilePhoto
     */
    alternateText?: string;
    /**
     * 
     * @type {string}
     * @memberof AtmWriteAllOfGoogleProfilePhoto
     */
    url: string;
}

export function AtmWriteAllOfGoogleProfilePhotoFromJSON(json: any): AtmWriteAllOfGoogleProfilePhoto {
    return AtmWriteAllOfGoogleProfilePhotoFromJSONTyped(json, false);
}

export function AtmWriteAllOfGoogleProfilePhotoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AtmWriteAllOfGoogleProfilePhoto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alternateText': !exists(json, 'alternateText') ? undefined : json['alternateText'],
        'url': json['url'],
    };
}

export function AtmWriteAllOfGoogleProfilePhotoToJSON(value?: AtmWriteAllOfGoogleProfilePhoto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alternateText': value.alternateText,
        'url': value.url,
    };
}


