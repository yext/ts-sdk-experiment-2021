/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
/**
 * 
 * @export
 * @interface HealthcareFacilityWriteAllOfServiceAreaPlaces
 */
export interface HealthcareFacilityWriteAllOfServiceAreaPlaces {
    /**
     * 
     * @type {string}
     * @memberof HealthcareFacilityWriteAllOfServiceAreaPlaces
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof HealthcareFacilityWriteAllOfServiceAreaPlaces
     */
    type?: HealthcareFacilityWriteAllOfServiceAreaPlacesTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum HealthcareFacilityWriteAllOfServiceAreaPlacesTypeEnum {
    PostalCode = 'POSTAL_CODE',
    Region = 'REGION',
    County = 'COUNTY',
    City = 'CITY',
    Sublocality = 'SUBLOCALITY'
}

export function HealthcareFacilityWriteAllOfServiceAreaPlacesFromJSON(json: any): HealthcareFacilityWriteAllOfServiceAreaPlaces {
    return HealthcareFacilityWriteAllOfServiceAreaPlacesFromJSONTyped(json, false);
}

export function HealthcareFacilityWriteAllOfServiceAreaPlacesFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthcareFacilityWriteAllOfServiceAreaPlaces {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function HealthcareFacilityWriteAllOfServiceAreaPlacesToJSON(value?: HealthcareFacilityWriteAllOfServiceAreaPlaces | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'type': value.type,
    };
}


