/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
import {
    InlineResponse200ResponseAccessHours,
    InlineResponse200ResponseAccessHoursFromJSON,
    InlineResponse200ResponseAccessHoursFromJSONTyped,
    InlineResponse200ResponseAccessHoursToJSON,
    InlineResponse200ResponseAddress,
    InlineResponse200ResponseAddressFromJSON,
    InlineResponse200ResponseAddressFromJSONTyped,
    InlineResponse200ResponseAddressToJSON,
    InlineResponse200ResponseAgeRange,
    InlineResponse200ResponseAgeRangeFromJSON,
    InlineResponse200ResponseAgeRangeFromJSONTyped,
    InlineResponse200ResponseAgeRangeToJSON,
    InlineResponse200ResponseAttendance,
    InlineResponse200ResponseAttendanceFromJSON,
    InlineResponse200ResponseAttendanceFromJSONTyped,
    InlineResponse200ResponseAttendanceToJSON,
    InlineResponse200ResponseBios,
    InlineResponse200ResponseBiosFromJSON,
    InlineResponse200ResponseBiosFromJSONTyped,
    InlineResponse200ResponseBiosToJSON,
    InlineResponse200ResponseBrunchHours,
    InlineResponse200ResponseBrunchHoursFromJSON,
    InlineResponse200ResponseBrunchHoursFromJSONTyped,
    InlineResponse200ResponseBrunchHoursToJSON,
    InlineResponse200ResponseCalendars,
    InlineResponse200ResponseCalendarsFromJSON,
    InlineResponse200ResponseCalendarsFromJSONTyped,
    InlineResponse200ResponseCalendarsToJSON,
    InlineResponse200ResponseDeliveryHours,
    InlineResponse200ResponseDeliveryHoursFromJSON,
    InlineResponse200ResponseDeliveryHoursFromJSONTyped,
    InlineResponse200ResponseDeliveryHoursToJSON,
    InlineResponse200ResponseDisplayCoordinate,
    InlineResponse200ResponseDisplayCoordinateFromJSON,
    InlineResponse200ResponseDisplayCoordinateFromJSONTyped,
    InlineResponse200ResponseDisplayCoordinateToJSON,
    InlineResponse200ResponseDriveThroughHours,
    InlineResponse200ResponseDriveThroughHoursFromJSON,
    InlineResponse200ResponseDriveThroughHoursFromJSONTyped,
    InlineResponse200ResponseDriveThroughHoursToJSON,
    InlineResponse200ResponseDropoffCoordinate,
    InlineResponse200ResponseDropoffCoordinateFromJSON,
    InlineResponse200ResponseDropoffCoordinateFromJSONTyped,
    InlineResponse200ResponseDropoffCoordinateToJSON,
    InlineResponse200ResponseEducationList,
    InlineResponse200ResponseEducationListFromJSON,
    InlineResponse200ResponseEducationListFromJSONTyped,
    InlineResponse200ResponseEducationListToJSON,
    InlineResponse200ResponseFacebookCallToAction,
    InlineResponse200ResponseFacebookCallToActionFromJSON,
    InlineResponse200ResponseFacebookCallToActionFromJSONTyped,
    InlineResponse200ResponseFacebookCallToActionToJSON,
    InlineResponse200ResponseFacebookCoverPhoto,
    InlineResponse200ResponseFacebookCoverPhotoFromJSON,
    InlineResponse200ResponseFacebookCoverPhotoFromJSONTyped,
    InlineResponse200ResponseFacebookCoverPhotoToJSON,
    InlineResponse200ResponseFacebookProfilePhoto,
    InlineResponse200ResponseFacebookProfilePhotoFromJSON,
    InlineResponse200ResponseFacebookProfilePhotoFromJSONTyped,
    InlineResponse200ResponseFacebookProfilePhotoToJSON,
    InlineResponse200ResponseFeaturedMessage,
    InlineResponse200ResponseFeaturedMessageFromJSON,
    InlineResponse200ResponseFeaturedMessageFromJSONTyped,
    InlineResponse200ResponseFeaturedMessageToJSON,
    InlineResponse200ResponseFrequentlyAskedQuestions,
    InlineResponse200ResponseFrequentlyAskedQuestionsFromJSON,
    InlineResponse200ResponseFrequentlyAskedQuestionsFromJSONTyped,
    InlineResponse200ResponseFrequentlyAskedQuestionsToJSON,
    InlineResponse200ResponseGoogleCoverPhoto,
    InlineResponse200ResponseGoogleCoverPhotoFromJSON,
    InlineResponse200ResponseGoogleCoverPhotoFromJSONTyped,
    InlineResponse200ResponseGoogleCoverPhotoToJSON,
    InlineResponse200ResponseGoogleProfilePhoto,
    InlineResponse200ResponseGoogleProfilePhotoFromJSON,
    InlineResponse200ResponseGoogleProfilePhotoFromJSONTyped,
    InlineResponse200ResponseGoogleProfilePhotoToJSON,
    InlineResponse200ResponseHappyHours,
    InlineResponse200ResponseHappyHoursFromJSON,
    InlineResponse200ResponseHappyHoursFromJSONTyped,
    InlineResponse200ResponseHappyHoursToJSON,
    InlineResponse200ResponseHeadshot,
    InlineResponse200ResponseHeadshotFromJSON,
    InlineResponse200ResponseHeadshotFromJSONTyped,
    InlineResponse200ResponseHeadshotToJSON,
    InlineResponse200ResponseHours,
    InlineResponse200ResponseHoursFromJSON,
    InlineResponse200ResponseHoursFromJSONTyped,
    InlineResponse200ResponseHoursToJSON,
    InlineResponse200ResponseKitchenHours,
    InlineResponse200ResponseKitchenHoursFromJSON,
    InlineResponse200ResponseKitchenHoursFromJSONTyped,
    InlineResponse200ResponseKitchenHoursToJSON,
    InlineResponse200ResponseLocation,
    InlineResponse200ResponseLocationFromJSON,
    InlineResponse200ResponseLocationFromJSONTyped,
    InlineResponse200ResponseLocationToJSON,
    InlineResponse200ResponseLogo,
    InlineResponse200ResponseLogoFromJSON,
    InlineResponse200ResponseLogoFromJSONTyped,
    InlineResponse200ResponseLogoToJSON,
    InlineResponse200ResponseMenuUrl,
    InlineResponse200ResponseMenuUrlFromJSON,
    InlineResponse200ResponseMenuUrlFromJSONTyped,
    InlineResponse200ResponseMenuUrlToJSON,
    InlineResponse200ResponseMenus,
    InlineResponse200ResponseMenusFromJSON,
    InlineResponse200ResponseMenusFromJSONTyped,
    InlineResponse200ResponseMenusToJSON,
    InlineResponse200ResponseMeta,
    InlineResponse200ResponseMetaFromJSON,
    InlineResponse200ResponseMetaFromJSONTyped,
    InlineResponse200ResponseMetaToJSON,
    InlineResponse200ResponseOnlineServiceHours,
    InlineResponse200ResponseOnlineServiceHoursFromJSON,
    InlineResponse200ResponseOnlineServiceHoursFromJSONTyped,
    InlineResponse200ResponseOnlineServiceHoursToJSON,
    InlineResponse200ResponseOrderUrl,
    InlineResponse200ResponseOrderUrlFromJSON,
    InlineResponse200ResponseOrderUrlFromJSONTyped,
    InlineResponse200ResponseOrderUrlToJSON,
    InlineResponse200ResponsePhotoGallery,
    InlineResponse200ResponsePhotoGalleryFromJSON,
    InlineResponse200ResponsePhotoGalleryFromJSONTyped,
    InlineResponse200ResponsePhotoGalleryToJSON,
    InlineResponse200ResponsePickupCoordinate,
    InlineResponse200ResponsePickupCoordinateFromJSON,
    InlineResponse200ResponsePickupCoordinateFromJSONTyped,
    InlineResponse200ResponsePickupCoordinateToJSON,
    InlineResponse200ResponsePickupHours,
    InlineResponse200ResponsePickupHoursFromJSON,
    InlineResponse200ResponsePickupHoursFromJSONTyped,
    InlineResponse200ResponsePickupHoursToJSON,
    InlineResponse200ResponseProductLists,
    InlineResponse200ResponseProductListsFromJSON,
    InlineResponse200ResponseProductListsFromJSONTyped,
    InlineResponse200ResponseProductListsToJSON,
    InlineResponse200ResponseRankTrackingCompetitors,
    InlineResponse200ResponseRankTrackingCompetitorsFromJSON,
    InlineResponse200ResponseRankTrackingCompetitorsFromJSONTyped,
    InlineResponse200ResponseRankTrackingCompetitorsToJSON,
    InlineResponse200ResponseReservationUrl,
    InlineResponse200ResponseReservationUrlFromJSON,
    InlineResponse200ResponseReservationUrlFromJSONTyped,
    InlineResponse200ResponseReservationUrlToJSON,
    InlineResponse200ResponseRoutableCoordinate,
    InlineResponse200ResponseRoutableCoordinateFromJSON,
    InlineResponse200ResponseRoutableCoordinateFromJSONTyped,
    InlineResponse200ResponseRoutableCoordinateToJSON,
    InlineResponse200ResponseSeniorHours,
    InlineResponse200ResponseSeniorHoursFromJSON,
    InlineResponse200ResponseSeniorHoursFromJSONTyped,
    InlineResponse200ResponseSeniorHoursToJSON,
    InlineResponse200ResponseServiceArea,
    InlineResponse200ResponseServiceAreaFromJSON,
    InlineResponse200ResponseServiceAreaFromJSONTyped,
    InlineResponse200ResponseServiceAreaToJSON,
    InlineResponse200ResponseServiceAreaPlaces,
    InlineResponse200ResponseServiceAreaPlacesFromJSON,
    InlineResponse200ResponseServiceAreaPlacesFromJSONTyped,
    InlineResponse200ResponseServiceAreaPlacesToJSON,
    InlineResponse200ResponseTakeoutHours,
    InlineResponse200ResponseTakeoutHoursFromJSON,
    InlineResponse200ResponseTakeoutHoursFromJSONTyped,
    InlineResponse200ResponseTakeoutHoursToJSON,
    InlineResponse200ResponseTicketPriceRange,
    InlineResponse200ResponseTicketPriceRangeFromJSON,
    InlineResponse200ResponseTicketPriceRangeFromJSONTyped,
    InlineResponse200ResponseTicketPriceRangeToJSON,
    InlineResponse200ResponseTime,
    InlineResponse200ResponseTimeFromJSON,
    InlineResponse200ResponseTimeFromJSONTyped,
    InlineResponse200ResponseTimeToJSON,
    InlineResponse200ResponseUberLink,
    InlineResponse200ResponseUberLinkFromJSON,
    InlineResponse200ResponseUberLinkFromJSONTyped,
    InlineResponse200ResponseUberLinkToJSON,
    InlineResponse200ResponseUberTripBranding,
    InlineResponse200ResponseUberTripBrandingFromJSON,
    InlineResponse200ResponseUberTripBrandingFromJSONTyped,
    InlineResponse200ResponseUberTripBrandingToJSON,
    InlineResponse200ResponseVideos,
    InlineResponse200ResponseVideosFromJSON,
    InlineResponse200ResponseVideosFromJSONTyped,
    InlineResponse200ResponseVideosToJSON,
    InlineResponse200ResponseWalkableCoordinate,
    InlineResponse200ResponseWalkableCoordinateFromJSON,
    InlineResponse200ResponseWalkableCoordinateFromJSONTyped,
    InlineResponse200ResponseWalkableCoordinateToJSON,
    InlineResponse200ResponseWebsiteUrl,
    InlineResponse200ResponseWebsiteUrlFromJSON,
    InlineResponse200ResponseWebsiteUrlFromJSONTyped,
    InlineResponse200ResponseWebsiteUrlToJSON,
    InlineResponse200ResponseYextDisplayCoordinate,
    InlineResponse200ResponseYextDisplayCoordinateFromJSON,
    InlineResponse200ResponseYextDisplayCoordinateFromJSONTyped,
    InlineResponse200ResponseYextDisplayCoordinateToJSON,
    InlineResponse200ResponseYextDropoffCoordinate,
    InlineResponse200ResponseYextDropoffCoordinateFromJSON,
    InlineResponse200ResponseYextDropoffCoordinateFromJSONTyped,
    InlineResponse200ResponseYextDropoffCoordinateToJSON,
    InlineResponse200ResponseYextPickupCoordinate,
    InlineResponse200ResponseYextPickupCoordinateFromJSON,
    InlineResponse200ResponseYextPickupCoordinateFromJSONTyped,
    InlineResponse200ResponseYextPickupCoordinateToJSON,
    InlineResponse200ResponseYextRoutableCoordinate,
    InlineResponse200ResponseYextRoutableCoordinateFromJSON,
    InlineResponse200ResponseYextRoutableCoordinateFromJSONTyped,
    InlineResponse200ResponseYextRoutableCoordinateToJSON,
    InlineResponse200ResponseYextWalkableCoordinate,
    InlineResponse200ResponseYextWalkableCoordinateFromJSON,
    InlineResponse200ResponseYextWalkableCoordinateFromJSONTyped,
    InlineResponse200ResponseYextWalkableCoordinateToJSON,
} from './index.ts';

/**
 * 
 * @export
 * @interface InlineResponse200ResponseEntities
 */
export interface InlineResponse200ResponseEntities {
    /**
     * 
     * @type {InlineResponse200ResponseMeta}
     * @memberof InlineResponse200ResponseEntities
     */
    meta?: InlineResponse200ResponseMeta;
    /**
     * 
     * 
     * 
     * Cannot Include:
     * * HTML markup
     * * a phone number
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * contactCard
     *    * event
     *    * faq
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * helpArticle
     *    * hotel
     *    * job
     *    * location
     *    * product
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    name?: string;
    /**
     * 
     * @type {InlineResponse200ResponseAddress}
     * @memberof InlineResponse200ResponseEntities
     */
    address?: InlineResponse200ResponseAddress;
    /**
     * Indicates whether the healthcare provider is accepting new patients.
     * 
     * Filtering Type: `boolean`
     * 
     * ```
     * Eligible For: 
     *    * healthcareFacility
     *    * healthcareProfessional
     * ```
     * @type {boolean}
     * @memberof InlineResponse200ResponseEntities
     */
    acceptingNewPatients?: boolean;
    /**
     * Indicates whether the entity accepts reservations.
     * 
     * Filtering Type: `boolean`
     * 
     * ```
     * Eligible For: 
     *    * restaurant
     * ```
     * @type {boolean}
     * @memberof InlineResponse200ResponseEntities
     */
    acceptsReservations?: boolean;
    /**
     * 
     * @type {InlineResponse200ResponseAccessHours}
     * @memberof InlineResponse200ResponseEntities
     */
    accessHours?: InlineResponse200ResponseAccessHours;
    /**
     * Additional information about hours that does not fit in **`hours`** (e.g., `"Closed during the winter"`)
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * contactCard
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    additionalHoursText?: string;
    /**
     * If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager
     * 
     * 
     * Array must be ordered.
     * 
     * 
     * Filtering Type: `list of entityId`
     * 
     * ```
     * Eligible For: 
     *    * event
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    additionalPromotingLocations?: Set<string>;
    /**
     * If `true`, the entity's street address will not be shown on listings. Defaults to `false`.
     * 
     * Filtering Type: `boolean`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {boolean}
     * @memberof InlineResponse200ResponseEntities
     */
    addressHidden?: boolean;
    /**
     * A list of hospitals where the healthcare professional admits patients
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 100 elements.
     * 
     * Array item description:
     * 
     * >Cannot Include:
     * >* HTML markup
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * healthcareProfessional
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    admittingHospitals?: Set<string>;
    /**
     * Indicates whether the entity has a pool for adults only.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    adultPool?: InlineResponse200ResponseEntitiesAdultPoolEnum;
    /**
     * 
     * @type {InlineResponse200ResponseAgeRange}
     * @memberof InlineResponse200ResponseEntities
     */
    ageRange?: InlineResponse200ResponseAgeRange;
    /**
     * Indicates whether the entity offers a shuttle to/from the airport.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    airportShuttle?: InlineResponse200ResponseEntitiesAirportShuttleEnum;
    /**
     * Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    airportTransfer?: InlineResponse200ResponseEntitiesAirportTransferEnum;
    /**
     * Indicates whether the entity offers all-inclusive rates.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    allInclusive?: InlineResponse200ResponseEntitiesAllInclusiveEnum;
    /**
     * Other names for your business that you would like us to use when tracking your search performance
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 3 elements.
     * 
     * Array item description:
     * 
     * >Cannot Include:
     * >* HTML markup
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    alternateNames?: Set<string>;
    /**
     * Must be a valid phone number.
     * 
     * If the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    alternatePhone?: string;
    /**
     * Other websites for your business that we should search for when tracking your search performance
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 3 elements.
     * 
     * Array item description:
     * 
     * >Cannot Include:
     * >* common domain names, e.g., google.com, youtube.com, etc.
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    alternateWebsites?: Set<string>;
    /**
     * The URL where consumers can download the entity's Android app
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    androidAppUrl?: string;
    /**
     * The answer to the frequently asked question represented by this entity
     * 
     * 
     * Character limit: 0 .. 15000
     * 
     * Supported formats include:
     * * BOLD
     * * ITALICS
     * * UNDERLINE
     * * BULLETED_LIST
     * * NUMBERED_LIST
     * * HYPERLINK
     * * IMAGE
     * * CODE_SPAN
     * * HEADINGS
     * 
     * ```
     * Eligible For: 
     *    * faq
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    answer?: string;
    /**
     * The application URL
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * job
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    applicationUrl?: string;
    /**
     * Association memberships relevant to the entity (e.g., `"New York Doctors Association"`)
     * All strings must be non-empty when trimmed of whitespace.
     * 
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 100 elements.
     * 
     * Array item description:
     * 
     * >Cannot Include:
     * >* HTML markup
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    associations?: Set<string>;
    /**
     * 
     * @type {InlineResponse200ResponseAttendance}
     * @memberof InlineResponse200ResponseEntities
     */
    attendance?: InlineResponse200ResponseAttendance;
    /**
     * The formality of clothing typically worn at this restaurant
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    attire?: InlineResponse200ResponseEntitiesAttireEnum;
    /**
     * Indicates whether the entity offers babysitting.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    babysittingOffered?: InlineResponse200ResponseEntitiesBabysittingOfferedEnum;
    /**
     * Indicates whether the entity offers baggage storage pre check-in and post check-out.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    baggageStorage?: InlineResponse200ResponseEntitiesBaggageStorageEnum;
    /**
     * Indicates whether the entity has an indoor or outdoor bar onsite.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    bar?: InlineResponse200ResponseEntitiesBarEnum;
    /**
     * Indicates whether the entity has access to a beach.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    beachAccess?: InlineResponse200ResponseEntitiesBeachAccessEnum;
    /**
     * Indicates whether the entity is physically located next to a beach.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    beachFrontProperty?: InlineResponse200ResponseEntitiesBeachFrontPropertyEnum;
    /**
     * Indicates whether the entity offers bicycles for rent or for free.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    bicycles?: InlineResponse200ResponseEntitiesBicyclesEnum;
    /**
     * 
     * @type {InlineResponse200ResponseBios}
     * @memberof InlineResponse200ResponseEntities
     */
    bios?: InlineResponse200ResponseBios;
    /**
     * Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    boutiqueStores?: InlineResponse200ResponseEntitiesBoutiqueStoresEnum;
    /**
     * Brands sold by this entity
     * All strings must be non-empty when trimmed of whitespace.
     * 
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 100 elements.
     * 
     * Array item description:
     * 
     * >Cannot Include:
     * >* HTML markup
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    brands?: Set<string>;
    /**
     * Indicates whether the entity offers breakfast.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    breakfast?: InlineResponse200ResponseEntitiesBreakfastEnum;
    /**
     * 
     * @type {InlineResponse200ResponseBrunchHours}
     * @memberof InlineResponse200ResponseEntities
     */
    brunchHours?: InlineResponse200ResponseBrunchHours;
    /**
     * Indicates whether the entity has a business center.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    businessCenter?: InlineResponse200ResponseEntitiesBusinessCenterEnum;
    /**
     * 
     * @type {InlineResponse200ResponseCalendars}
     * @memberof InlineResponse200ResponseEntities
     */
    calendars?: InlineResponse200ResponseCalendars;
    /**
     * Indicates whether the entity offers car rental.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    carRental?: InlineResponse200ResponseEntitiesCarRentalEnum;
    /**
     * Indicates whether the entity has a casino on premise or nearby.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    casino?: InlineResponse200ResponseEntitiesCasinoEnum;
    /**
     * Yext Category IDs.
     * 
     * IDs must be valid and selectable (i.e., cannot be parent categories).
     * 
     * NOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.
     * 
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * event
     *    * faq
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * job
     *    * location
     *    * restaurant
     * ```
     * @type {Array<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    categoryIds?: Array<string>;
    /**
     * Indicates if the entity is cat friendly.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    catsAllowed?: InlineResponse200ResponseEntitiesCatsAllowedEnum;
    /**
     * A list of the certifications held by the healthcare professional
     * **NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.
     * 
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 100 elements.
     * 
     * Array item description:
     * 
     * >Cannot Include:
     * >* HTML markup
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * healthcareProfessional
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    certifications?: Set<string>;
    /**
     * The check-in time
     * 
     * Filtering Type: `time`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    checkInTime?: string;
    /**
     * The check-out time
     * 
     * Filtering Type: `time`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    checkOutTime?: string;
    /**
     * The 1 to 5 star rating of the entitiy based on its services and facilities.
     * 
     * Filtering Type: `decimal`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    classificationRating?: string;
    /**
     * Indicates whether the entity is closed
     * 
     * Filtering Type: `boolean`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {boolean}
     * @memberof InlineResponse200ResponseEntities
     */
    closed?: boolean;
    /**
     * Indicates whether the entity offers concierge service.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    concierge?: InlineResponse200ResponseEntitiesConciergeEnum;
    /**
     * A list of the conditions treated by the healthcare provider
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 100 elements.
     * 
     * Array item description:
     * 
     * >Cannot Include:
     * >* HTML markup
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * healthcareFacility
     *    * healthcareProfessional
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    conditionsTreated?: Set<string>;
    /**
     * Indicates whether the entity has a convenience store.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    convenienceStore?: InlineResponse200ResponseEntitiesConvenienceStoreEnum;
    /**
     * Indicates whether the entity offers currency exchange services.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    currencyExchange?: InlineResponse200ResponseEntitiesCurrencyExchangeEnum;
    /**
     * Additional keywords you would like us to use when tracking your search performance
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 5 elements.
     * 
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    customKeywords?: Set<string>;
    /**
     * The date this entity was posted
     * 
     * Filtering Type: `date`
     * 
     * ```
     * Eligible For: 
     *    * job
     * ```
     * @type {Date}
     * @memberof InlineResponse200ResponseEntities
     */
    datePosted?: Date;
    /**
     * A list of the degrees earned by the healthcare professional
     * 
     * 
     * Array must be ordered.
     * 
     * 
     * Filtering Type: `list of option`
     * 
     * ```
     * Eligible For: 
     *    * healthcareProfessional
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    degrees?: Set<InlineResponse200ResponseEntitiesDegreesEnum>;
    /**
     * 
     * @type {InlineResponse200ResponseDeliveryHours}
     * @memberof InlineResponse200ResponseEntities
     */
    deliveryHours?: InlineResponse200ResponseDeliveryHours;
    /**
     * A description of the entity
     * 
     * 
     * Cannot Include:
     * * HTML markup
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * contactCard
     *    * event
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * job
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    description?: string;
    /**
     * 
     * @type {InlineResponse200ResponseDisplayCoordinate}
     * @memberof InlineResponse200ResponseEntities
     */
    displayCoordinate?: InlineResponse200ResponseDisplayCoordinate;
    /**
     * Indicates whether the entity has a doctor on premise or on call.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    doctorOnCall?: InlineResponse200ResponseEntitiesDoctorOnCallEnum;
    /**
     * Indicates if the entity is dog friendly.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    dogsAllowed?: InlineResponse200ResponseEntitiesDogsAllowedEnum;
    /**
     * 
     * @type {InlineResponse200ResponseDriveThroughHours}
     * @memberof InlineResponse200ResponseEntities
     */
    driveThroughHours?: InlineResponse200ResponseDriveThroughHours;
    /**
     * 
     * @type {InlineResponse200ResponseDropoffCoordinate}
     * @memberof InlineResponse200ResponseEntities
     */
    dropoffCoordinate?: InlineResponse200ResponseDropoffCoordinate;
    /**
     * Information about the education or training completed by the healthcare professional
     * 
     * 
     * Array must be ordered.
     * 
     * 
     * Filtering Type: `list of object`
     * 
     * ```
     * Eligible For: 
     *    * healthcareProfessional
     * ```
     * @type {Set<InlineResponse200ResponseEducationList>}
     * @memberof InlineResponse200ResponseEntities
     */
    educationList?: Set<InlineResponse200ResponseEducationList>;
    /**
     * Indicates whether the entity has electric car chargine stations on premise.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    electricChargingStation?: InlineResponse200ResponseEntitiesElectricChargingStationEnum;
    /**
     * Indicates whether the entity has an elevator.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    elevator?: InlineResponse200ResponseEntitiesElevatorEnum;
    /**
     * Indicates whether the entity has an elliptical machine.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    ellipticalMachine?: InlineResponse200ResponseEntitiesEllipticalMachineEnum;
    /**
     * Emails addresses for this entity's point of contact
     * 
     * Must be valid email addresses
     * 
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 5 elements.
     * 
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * contactCard
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    emails?: Set<string>;
    /**
     * The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * job
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    employmentType?: InlineResponse200ResponseEntitiesEmploymentTypeEnum;
    /**
     * Information on whether the event will take place as scheduled
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * event
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    eventStatus?: InlineResponse200ResponseEntitiesEventStatusEnum;
    /**
     * 
     * @type {InlineResponse200ResponseFacebookCallToAction}
     * @memberof InlineResponse200ResponseEntities
     */
    facebookCallToAction?: InlineResponse200ResponseFacebookCallToAction;
    /**
     * 
     * @type {InlineResponse200ResponseFacebookCoverPhoto}
     * @memberof InlineResponse200ResponseEntities
     */
    facebookCoverPhoto?: InlineResponse200ResponseFacebookCoverPhoto;
    /**
     * Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.
     * 
     * 
     * Cannot Include:
     * * HTML markup
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    facebookDescriptor?: string;
    /**
     * The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    facebookName?: string;
    /**
     * The city to be displayed on this entity's Facebook profile
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    facebookOverrideCity?: string;
    /**
     * URL for the entity's Facebook Page.
     * 
     * Valid formats:
     * 
     * - facebook.com/profile.php?id=[numId]
     * - facebook.com/group.php?gid=[numId]
     * - facebook.com/groups/[numId]
     * - facebook.com/[Name]
     * - facebook.com/pages/[Name]/[numId]
     * 
     * where [Name] is a String and [numId] is an Integer
     * 
     * If you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    facebookPageUrl?: string;
    /**
     * 
     * @type {InlineResponse200ResponseFacebookProfilePhoto}
     * @memberof InlineResponse200ResponseEntities
     */
    facebookProfilePhoto?: InlineResponse200ResponseFacebookProfilePhoto;
    /**
     * The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    facebookVanityUrl?: string;
    /**
     * Must be a valid fax number.
     * 
     * If the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    fax?: string;
    /**
     * 
     * @type {InlineResponse200ResponseFeaturedMessage}
     * @memberof InlineResponse200ResponseEntities
     */
    featuredMessage?: InlineResponse200ResponseFeaturedMessage;
    /**
     * The first name of the healthcare professional
     * 
     * 
     * Cannot Include:
     * * a URL or domain name
     * * HTML markup
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * healthcareProfessional
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    firstName?: string;
    /**
     * Link to the review-collection page, where consumers can leave first-party reviews
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    firstPartyReviewPage?: string;
    /**
     * Indicates whether the entity has a fitness center.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    fitnessCenter?: InlineResponse200ResponseEntitiesFitnessCenterEnum;
    /**
     * The number of floors the entity has from ground floor to top floor.
     * 
     * Filtering Type: `integer`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {number}
     * @memberof InlineResponse200ResponseEntities
     */
    floorCount?: number;
    /**
     * Indicates whether the entity has free weights.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    freeWeights?: InlineResponse200ResponseEntitiesFreeWeightsEnum;
    /**
     * A list of questions that are frequently asked about this entity
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 100 elements.
     * 
     * 
     * Filtering Type: `list of object`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<InlineResponse200ResponseFrequentlyAskedQuestions>}
     * @memberof InlineResponse200ResponseEntities
     */
    frequentlyAskedQuestions?: Set<InlineResponse200ResponseFrequentlyAskedQuestions>;
    /**
     * Indicates whether the entity has a front desk.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    frontDesk?: InlineResponse200ResponseEntitiesFrontDeskEnum;
    /**
     * Indicates whether the entity has a game room.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    gameRoom?: InlineResponse200ResponseEntitiesGameRoomEnum;
    /**
     * The gender of the healthcare professional
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * healthcareProfessional
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    gender?: InlineResponse200ResponseEntitiesGenderEnum;
    /**
     * Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    geomodifier?: string;
    /**
     * Indicates whether the entity has a gift shop.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    giftShop?: InlineResponse200ResponseEntitiesGiftShopEnum;
    /**
     * Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    golf?: InlineResponse200ResponseEntitiesGolfEnum;
    /**
     * The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.
     * 
     * Valid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.
     * 
     * Keyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).
     * 
     * * If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ "id": "has_wheelchair_accessible_entrance", "values": [ "true" ] }]`)
     * * If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ "has_wheelchair_accessible_entrance": [ "true" ]}`)
     * 
     * **NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.
     * 
     * Filtering Type: `object`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * event
     *    * faq
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * job
     *    * location
     *    * restaurant
     * ```
     * @type {object}
     * @memberof InlineResponse200ResponseEntities
     */
    googleAttributes?: object;
    /**
     * 
     * @type {InlineResponse200ResponseGoogleCoverPhoto}
     * @memberof InlineResponse200ResponseEntities
     */
    googleCoverPhoto?: InlineResponse200ResponseGoogleCoverPhoto;
    /**
     * Google My Business Labels help users organize their locations into groups within GMB.
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 10 elements.
     * 
     * Array item description:
     * 
     * >Cannot Include:
     * >* HTML markup
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    googleMyBusinessLabels?: Set<string>;
    /**
     * The unique identifier of this entity on Google Maps.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    googlePlaceId?: string;
    /**
     * 
     * @type {InlineResponse200ResponseGoogleProfilePhoto}
     * @memberof InlineResponse200ResponseEntities
     */
    googleProfilePhoto?: InlineResponse200ResponseGoogleProfilePhoto;
    /**
     * The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).
     * 
     * For example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    googleWebsiteOverride?: string;
    /**
     * 
     * @type {InlineResponse200ResponseHappyHours}
     * @memberof InlineResponse200ResponseEntities
     */
    happyHours?: InlineResponse200ResponseHappyHours;
    /**
     * 
     * @type {InlineResponse200ResponseHeadshot}
     * @memberof InlineResponse200ResponseEntities
     */
    headshot?: InlineResponse200ResponseHeadshot;
    /**
     * The organization that is hiring for the open job
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * job
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    hiringOrganization?: string;
    /**
     * Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity
     * 
     * Filtering Type: `boolean`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {boolean}
     * @memberof InlineResponse200ResponseEntities
     */
    holidayHoursConversationEnabled?: boolean;
    /**
     * Indicates whether the entity offers horseback riding.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    horsebackRiding?: InlineResponse200ResponseEntitiesHorsebackRidingEnum;
    /**
     * Indicates whether the entity has a hot tub.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    hotTub?: InlineResponse200ResponseEntitiesHotTubEnum;
    /**
     * 
     * @type {InlineResponse200ResponseHours}
     * @memberof InlineResponse200ResponseEntities
     */
    hours?: InlineResponse200ResponseHours;
    /**
     * Indicates whether the entity offers housekeeping services.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    housekeeping?: InlineResponse200ResponseEntitiesHousekeepingEnum;
    /**
     * A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    impressum?: string;
    /**
     * A count of the number of indoor pools
     * 
     * Filtering Type: `integer`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {number}
     * @memberof InlineResponse200ResponseEntities
     */
    indoorPoolCount?: number;
    /**
     * Valid Instagram username for the entity without the leading "@" (e.g., `NewCityAuto`)
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    instagramHandle?: string;
    /**
     * A list of insurance policies accepted by the healthcare provider
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 100 elements.
     * 
     * Array item description:
     * 
     * >Cannot Include:
     * >* HTML markup
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * healthcareFacility
     *    * healthcareProfessional
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    insuranceAccepted?: Set<string>;
    /**
     * The URL where consumers can download the entity's app to their iPhone or iPad
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    iosAppUrl?: string;
    /**
     * Indicates whether the healthcare entity is the primary entity in its group
     * 
     * Filtering Type: `boolean`
     * 
     * ```
     * Eligible For: 
     *    * healthcareProfessional
     * ```
     * @type {boolean}
     * @memberof InlineResponse200ResponseEntities
     */
    isClusterPrimary?: boolean;
    /**
     * Indicates whether or not the event is free
     * 
     * Filtering Type: `boolean`
     * 
     * ```
     * Eligible For: 
     *    * event
     * ```
     * @type {boolean}
     * @memberof InlineResponse200ResponseEntities
     */
    isFreeEvent?: boolean;
    /**
     * The ISO 3166-2 region code for the entity
     * 
     * Yext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    isoRegionCode?: string;
    /**
     * Keywords that describe the entity.
     * 
     * All strings must be non-empty when trimmed of whitespace.
     * 
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 100 elements.
     * 
     * Array item description:
     * 
     * >Cannot Include:
     * >* HTML markup
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * event
     *    * faq
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * helpArticle
     *    * hotel
     *    * job
     *    * location
     *    * product
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    keywords?: Set<string>;
    /**
     * Indicates if the entity is kid friendly.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    kidFriendly?: InlineResponse200ResponseEntitiesKidFriendlyEnum;
    /**
     * Indicates if the property has a Kids Club.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    kidsClub?: InlineResponse200ResponseEntitiesKidsClubEnum;
    /**
     * Indicates whether the entity allows kids to stay free.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    kidsStayFree?: InlineResponse200ResponseEntitiesKidsStayFreeEnum;
    /**
     * 
     * @type {InlineResponse200ResponseKitchenHours}
     * @memberof InlineResponse200ResponseEntities
     */
    kitchenHours?: InlineResponse200ResponseKitchenHours;
    /**
     * The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.
     * 
     * **NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.
     * 
     * Filtering Type: `opaque`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * contactCard
     *    * event
     *    * faq
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * helpArticle
     *    * hotel
     *    * job
     *    * location
     *    * product
     *    * restaurant
     * ```
     * @type {Array<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    labels?: Array<string>;
    /**
     * The URL of this entity's Landing Page that was created with Yext Pages
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * event
     *    * faq
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * helpArticle
     *    * hotel
     *    * job
     *    * location
     *    * product
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    landingPageUrl?: string;
    /**
     * The langauges in which consumers can commicate with this entity or its staff members
     * All strings must be non-empty when trimmed of whitespace.
     * 
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 100 elements.
     * 
     * Array item description:
     * 
     * >Cannot Include:
     * >* HTML markup
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    languages?: Set<string>;
    /**
     * The last name of the healthcare professional
     * 
     * 
     * Cannot Include:
     * * a URL or domain name
     * * HTML markup
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * healthcareProfessional
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    lastName?: string;
    /**
     * Indicates whether the entity offers laundry services.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    laundry?: InlineResponse200ResponseEntitiesLaundryEnum;
    /**
     * Indicates if the property has a lazy river
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    lazyRiver?: InlineResponse200ResponseEntitiesLazyRiverEnum;
    /**
     * Indicates if the property has a lifeguard on duty
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    lifeguard?: InlineResponse200ResponseEntitiesLifeguardEnum;
    /**
     * location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager
     * 
     * Filtering Type: `entityId`
     * 
     * ```
     * Eligible For: 
     *    * contactCard
     *    * event
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    linkedLocation?: string;
    /**
     * Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    localPhone?: string;
    /**
     * Indicates whether the entity offers local shuttle services.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    localShuttle?: InlineResponse200ResponseEntitiesLocalShuttleEnum;
    /**
     * For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.
     * 
     * Filtering Type: `entityId`
     * 
     * ```
     * Eligible For: 
     *    * atm
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    locatedIn?: string;
    /**
     * 
     * @type {InlineResponse200ResponseLocation}
     * @memberof InlineResponse200ResponseEntities
     */
    location?: InlineResponse200ResponseLocation;
    /**
     * Indicates the entity's type, if it is not an event
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    locationType?: InlineResponse200ResponseEntitiesLocationTypeEnum;
    /**
     * 
     * @type {InlineResponse200ResponseLogo}
     * @memberof InlineResponse200ResponseEntities
     */
    logo?: InlineResponse200ResponseLogo;
    /**
     * The main phone number of the entity's point of contact
     * 
     * Must be a valid phone number.
     * 
     * If the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * contactCard
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    mainPhone?: string;
    /**
     * Indicates whether the entity offers massage services.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    massage?: InlineResponse200ResponseEntitiesMassageEnum;
    /**
     * The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee
     * 
     * Filtering Type: `integer`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {number}
     * @memberof InlineResponse200ResponseEntities
     */
    maxAgeOfKidsStayFree?: number;
    /**
     * The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee
     * 
     * Filtering Type: `integer`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {number}
     * @memberof InlineResponse200ResponseEntities
     */
    maxNumberOfKidsStayFree?: number;
    /**
     * Types of meals served at this restaurant
     * 
     * Filtering Type: `list of option`
     * 
     * ```
     * Eligible For: 
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    mealsServed?: Set<InlineResponse200ResponseEntitiesMealsServedEnum>;
    /**
     * The number of meeting rooms the entity has.
     * 
     * Filtering Type: `integer`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {number}
     * @memberof InlineResponse200ResponseEntities
     */
    meetingRoomCount?: number;
    /**
     * 
     * @type {InlineResponse200ResponseMenuUrl}
     * @memberof InlineResponse200ResponseEntities
     */
    menuUrl?: InlineResponse200ResponseMenuUrl;
    /**
     * 
     * @type {InlineResponse200ResponseMenus}
     * @memberof InlineResponse200ResponseEntities
     */
    menus?: InlineResponse200ResponseMenus;
    /**
     * The middle name of the healthcare professional
     * 
     * 
     * Cannot Include:
     * * a URL or domain name
     * * HTML markup
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * healthcareProfessional
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    middleName?: string;
    /**
     * Must be a valid phone number.
     * 
     * If the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    mobilePhone?: string;
    /**
     * Indicates whether the entity is mobility/wheelchair accessible
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    mobilityAccessible?: InlineResponse200ResponseEntitiesMobilityAccessibleEnum;
    /**
     * Indicates whether the entity has a nightclub.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    nightclub?: InlineResponse200ResponseEntitiesNightclubEnum;
    /**
     * The National Provider Identifier (NPI) of the healthcare provider
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * healthcareFacility
     *    * healthcareProfessional
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    npi?: string;
    /**
     * Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity
     * 
     * Filtering Type: `boolean`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * faq
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * helpArticle
     *    * hotel
     *    * job
     *    * location
     *    * product
     *    * restaurant
     * ```
     * @type {boolean}
     * @memberof InlineResponse200ResponseEntities
     */
    nudgeEnabled?: boolean;
    /**
     * The name of the office where the healthcare professional works, if different from **`name`**
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * healthcareProfessional
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    officeName?: string;
    /**
     * 
     * @type {InlineResponse200ResponseOnlineServiceHours}
     * @memberof InlineResponse200ResponseEntities
     */
    onlineServiceHours?: InlineResponse200ResponseOnlineServiceHours;
    /**
     * 
     * @type {InlineResponse200ResponseOrderUrl}
     * @memberof InlineResponse200ResponseEntities
     */
    orderUrl?: InlineResponse200ResponseOrderUrl;
    /**
     * Point of contact for the event organizer (not to be published publicly)
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * event
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    organizerEmail?: string;
    /**
     * Point of contact for the event organizer (not to be published publicly)
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * event
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    organizerName?: string;
    /**
     * Point of contact for the event organizer (not to be published publicly)
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * event
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    organizerPhone?: string;
    /**
     * The number of outdoor pools the entity has.
     * 
     * Filtering Type: `integer`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {number}
     * @memberof InlineResponse200ResponseEntities
     */
    outdoorPoolCount?: number;
    /**
     * Indicates whether the entity offers parking services.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    parking?: InlineResponse200ResponseEntitiesParkingEnum;
    /**
     * The payment methods accepted by this entity
     * 
     * Valid elements depend on the entity's country.
     * 
     * 
     * Filtering Type: `list of option`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    paymentOptions?: Set<InlineResponse200ResponseEntitiesPaymentOptionsEnum>;
    /**
     * Performers at the event
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 100 elements.
     * 
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * event
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    performers?: Set<string>;
    /**
     * Indicates if the entity is pet friendly.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    petsAllowed?: InlineResponse200ResponseEntitiesPetsAllowedEnum;
    /**
     * 
     * **NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.
     * 
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 100 elements.
     * 
     * Array item description:
     * 
     * >Supported Aspect Ratios:
     * >* 1 x 1
     * >* 4 x 3
     * >* 3 x 2
     * >* 5 x 3
     * >* 16 x 9
     * >* 3 x 1
     * >* 2 x 3
     * >* 5 x 7
     * >* 4 x 5
     * >* 4 x 1
     * >
     * >**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.
     * >
     * 
     * Filtering Type: `list of object`
     * 
     * ```
     * Eligible For: 
     *    * event
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * product
     *    * restaurant
     * ```
     * @type {Array<InlineResponse200ResponsePhotoGallery>}
     * @memberof InlineResponse200ResponseEntities
     */
    photoGallery?: Array<InlineResponse200ResponsePhotoGallery>;
    /**
     * 
     * @type {InlineResponse200ResponsePickupCoordinate}
     * @memberof InlineResponse200ResponseEntities
     */
    pickupCoordinate?: InlineResponse200ResponsePickupCoordinate;
    /**
     * 
     * @type {InlineResponse200ResponsePickupHours}
     * @memberof InlineResponse200ResponseEntities
     */
    pickupHours?: InlineResponse200ResponsePickupHours;
    /**
     * he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    priceRange?: InlineResponse200ResponseEntitiesPriceRangeEnum;
    /**
     * ID of the user who is the primary Knowledge Assistant contact for the entity
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * faq
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * helpArticle
     *    * hotel
     *    * job
     *    * location
     *    * product
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    primaryConversationContact?: string;
    /**
     * Indicates whether the entity has access to a private beach.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    privateBeach?: InlineResponse200ResponseEntitiesPrivateBeachEnum;
    /**
     * Indicates whether the entity offers private car services.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    privateCarService?: InlineResponse200ResponseEntitiesPrivateCarServiceEnum;
    /**
     * 
     * @type {InlineResponse200ResponseProductLists}
     * @memberof InlineResponse200ResponseEntities
     */
    productLists?: InlineResponse200ResponseProductLists;
    /**
     * Products sold by this entity
     * 
     * All strings must be non-empty when trimmed of whitespace.
     * 
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 100 elements.
     * 
     * Array item description:
     * 
     * >Cannot Include:
     * >* HTML markup
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * location
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    products?: Set<string>;
    /**
     * Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity
     * 
     * Filtering Type: `boolean`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {boolean}
     * @memberof InlineResponse200ResponseEntities
     */
    questionsAndAnswers?: boolean;
    /**
     * Information about the competitors whose search performance you would like to compare to your own
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 5 elements.
     * 
     * 
     * Filtering Type: `list of object`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<InlineResponse200ResponseRankTrackingCompetitors>}
     * @memberof InlineResponse200ResponseEntities
     */
    rankTrackingCompetitors?: Set<InlineResponse200ResponseRankTrackingCompetitors>;
    /**
     * Indicates whether Rank Tracking is enabled
     * 
     * Filtering Type: `boolean`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {boolean}
     * @memberof InlineResponse200ResponseEntities
     */
    rankTrackingEnabled?: boolean;
    /**
     * How often we send search queries to track your search performance
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    rankTrackingFrequency?: InlineResponse200ResponseEntitiesRankTrackingFrequencyEnum;
    /**
     * The ways in which your keywords will be arranged in the search queries we use to track your performance
     * 
     * 
     * Array must have a minimum of 2 elements.
     * 
     * Array may have a maximum of 4 elements.
     * 
     * 
     * Filtering Type: `list of option`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    rankTrackingQueryTemplates?: Set<InlineResponse200ResponseEntitiesRankTrackingQueryTemplatesEnum>;
    /**
     * The search engines that we will use to track your performance
     * 
     * Filtering Type: `list of option`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    rankTrackingSites?: Set<InlineResponse200ResponseEntitiesRankTrackingSitesEnum>;
    /**
     * 
     * @type {InlineResponse200ResponseReservationUrl}
     * @memberof InlineResponse200ResponseEntities
     */
    reservationUrl?: InlineResponse200ResponseReservationUrl;
    /**
     * The number of restaurants the entity has.
     * 
     * Filtering Type: `integer`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {number}
     * @memberof InlineResponse200ResponseEntities
     */
    restaurantCount?: number;
    /**
     * The URL given Review Invitation emails where consumers can leave a review about the entity
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    reviewGenerationUrl?: string;
    /**
     * Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity
     * 
     * Filtering Type: `boolean`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {boolean}
     * @memberof InlineResponse200ResponseEntities
     */
    reviewResponseConversationEnabled?: boolean;
    /**
     * The number of rooms the entity has.
     * 
     * Filtering Type: `integer`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {number}
     * @memberof InlineResponse200ResponseEntities
     */
    roomCount?: number;
    /**
     * Indicates whether the entity offers room service.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    roomService?: InlineResponse200ResponseEntitiesRoomServiceEnum;
    /**
     * 
     * @type {InlineResponse200ResponseRoutableCoordinate}
     * @memberof InlineResponse200ResponseEntities
     */
    routableCoordinate?: InlineResponse200ResponseRoutableCoordinate;
    /**
     * Indicates whether the entity has a salon.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    salon?: InlineResponse200ResponseEntitiesSalonEnum;
    /**
     * Indicates whether the entity has a sauna.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    sauna?: InlineResponse200ResponseEntitiesSaunaEnum;
    /**
     * Indicates whether the entity offers scuba diving.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    scuba?: InlineResponse200ResponseEntitiesScubaEnum;
    /**
     * Indicates whether the entity offers self parking services.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    selfParking?: InlineResponse200ResponseEntitiesSelfParkingEnum;
    /**
     * 
     * @type {InlineResponse200ResponseSeniorHours}
     * @memberof InlineResponse200ResponseEntities
     */
    seniorHours?: InlineResponse200ResponseSeniorHours;
    /**
     * 
     * @type {InlineResponse200ResponseServiceArea}
     * @memberof InlineResponse200ResponseEntities
     */
    serviceArea?: InlineResponse200ResponseServiceArea;
    /**
     * Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.
     * **Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.
     * 
     * 
     * Array may have a maximum of 200 elements.
     * 
     * 
     * Filtering Type: `list of object`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<InlineResponse200ResponseServiceAreaPlaces>}
     * @memberof InlineResponse200ResponseEntities
     */
    serviceAreaPlaces?: Set<InlineResponse200ResponseServiceAreaPlaces>;
    /**
     * Services offered by this entity
     * 
     * All strings must be non-empty when trimmed of whitespace.
     * 
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 100 elements.
     * 
     * Array item description:
     * 
     * >Cannot Include:
     * >* HTML markup
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    services?: Set<string>;
    /**
     * Indicates if the entity is smoke free.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    smokeFreeProperty?: InlineResponse200ResponseEntitiesSmokeFreePropertyEnum;
    /**
     * Indicates whether the entity offers snorkeling.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    snorkeling?: InlineResponse200ResponseEntitiesSnorkelingEnum;
    /**
     * Indicates whether the entity offers a social hour.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    socialHour?: InlineResponse200ResponseEntitiesSocialHourEnum;
    /**
     * Indicates whether the entity has a spa.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    spa?: InlineResponse200ResponseEntitiesSpaEnum;
    /**
     * Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)
     * 
     * All strings must be non-empty when trimmed of whitespace.
     * 
     * 
     * 
     * Array must be ordered.
     * 
     * Array may have a maximum of 100 elements.
     * 
     * Array item description:
     * 
     * >Cannot Include:
     * >* HTML markup
     * 
     * Filtering Type: `list of text`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * location
     *    * restaurant
     * ```
     * @type {Set<string>}
     * @memberof InlineResponse200ResponseEntities
     */
    specialities?: Set<string>;
    /**
     * Indicates whether the entity has a sit-down restaurant.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    tableService?: InlineResponse200ResponseEntitiesTableServiceEnum;
    /**
     * 
     * @type {InlineResponse200ResponseTakeoutHours}
     * @memberof InlineResponse200ResponseEntities
     */
    takeoutHours?: InlineResponse200ResponseTakeoutHours;
    /**
     * Indicates whether the entity has tennis courts.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    tennis?: InlineResponse200ResponseEntitiesTennisEnum;
    /**
     * Indicates whether the entity has a thermal pool.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    thermalPool?: InlineResponse200ResponseEntitiesThermalPoolEnum;
    /**
     * Information about the availability of tickets for the event
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * event
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    ticketAvailability?: InlineResponse200ResponseEntitiesTicketAvailabilityEnum;
    /**
     * 
     * @type {InlineResponse200ResponseTicketPriceRange}
     * @memberof InlineResponse200ResponseEntities
     */
    ticketPriceRange?: InlineResponse200ResponseTicketPriceRange;
    /**
     * The date/time tickets are available for sale (local time)
     * 
     * Filtering Type: `datetime`
     * 
     * ```
     * Eligible For: 
     *    * event
     * ```
     * @type {Date}
     * @memberof InlineResponse200ResponseEntities
     */
    ticketSaleDateTime?: Date;
    /**
     * URL to purchase tickets for the event (if ticketed)
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * event
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    ticketUrl?: string;
    /**
     * 
     * @type {InlineResponse200ResponseTime}
     * @memberof InlineResponse200ResponseEntities
     */
    time?: InlineResponse200ResponseTime;
    /**
     * Represents the time zone offset of the entity from UTC, in `±hh:mm` format.
     * 
     * For example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.
     * 
     * If the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.
     * 
     * If the entity is in UTC time, the offset will be `+00:00`.
     * 
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * event
     *    * faq
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * job
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    timeZoneUtcOffset?: string;
    /**
     * The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `"America/New_York"`
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * contactCard
     *    * event
     *    * faq
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * helpArticle
     *    * hotel
     *    * job
     *    * location
     *    * product
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    timezone?: string;
    /**
     * Must be a valid phone number.
     * 
     * If the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    tollFreePhone?: string;
    /**
     * Indicates whether the entity has a treadmill.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    treadmill?: InlineResponse200ResponseEntitiesTreadmillEnum;
    /**
     * Must be a valid phone number.
     * 
     * If the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * atm
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    ttyPhone?: string;
    /**
     * Indicates whether the entity offers turndown service.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    turndownService?: InlineResponse200ResponseEntitiesTurndownServiceEnum;
    /**
     * Valid Twitter handle for the entity without the leading "@" (e.g., `JohnSmith`)
     * 
     * If you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    twitterHandle?: string;
    /**
     * 
     * @type {InlineResponse200ResponseUberLink}
     * @memberof InlineResponse200ResponseEntities
     */
    uberLink?: InlineResponse200ResponseUberLink;
    /**
     * 
     * @type {InlineResponse200ResponseUberTripBranding}
     * @memberof InlineResponse200ResponseEntities
     */
    uberTripBranding?: InlineResponse200ResponseUberTripBranding;
    /**
     * Indicates whether the entity offers valet parking services.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    valetParking?: InlineResponse200ResponseEntitiesValetParkingEnum;
    /**
     * The date this entity is valid through.
     * 
     * Filtering Type: `datetime`
     * 
     * ```
     * Eligible For: 
     *    * job
     * ```
     * @type {Date}
     * @memberof InlineResponse200ResponseEntities
     */
    validThrough?: Date;
    /**
     * Indicates whether the entity has a vending machine.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    vendingMachine?: InlineResponse200ResponseEntitiesVendingMachineEnum;
    /**
     * Name of the venue where the event is being held
     * 
     * Filtering Type: `text`
     * 
     * ```
     * Eligible For: 
     *    * event
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    venueName?: string;
    /**
     * Valid YouTube URLs for embedding a video on some publisher sites
     * 
     * **NOTE:** Currently, only the first URL in the Array appears in your listings.
     * 
     * 
     * 
     * Array must be ordered.
     * 
     * 
     * Filtering Type: `list of object`
     * 
     * ```
     * Eligible For: 
     *    * financialProfessional
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * product
     *    * restaurant
     * ```
     * @type {Set<InlineResponse200ResponseVideos>}
     * @memberof InlineResponse200ResponseEntities
     */
    videos?: Set<InlineResponse200ResponseVideos>;
    /**
     * Indicates whether the entity has a wading pool.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    wadingPool?: InlineResponse200ResponseEntitiesWadingPoolEnum;
    /**
     * Indicates whether the entity offers wake up call services.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    wakeUpCalls?: InlineResponse200ResponseEntitiesWakeUpCallsEnum;
    /**
     * 
     * @type {InlineResponse200ResponseWalkableCoordinate}
     * @memberof InlineResponse200ResponseEntities
     */
    walkableCoordinate?: InlineResponse200ResponseWalkableCoordinate;
    /**
     * Indicates whether the entity has a water park.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    waterPark?: InlineResponse200ResponseEntitiesWaterParkEnum;
    /**
     * Indicates whether the entity offers water skiing.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    waterSkiing?: InlineResponse200ResponseEntitiesWaterSkiingEnum;
    /**
     * Indicates whether the entity offers any kind of watercrafts.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    watercraft?: InlineResponse200ResponseEntitiesWatercraftEnum;
    /**
     * Indicates whether the entity has a water slide.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    waterslide?: InlineResponse200ResponseEntitiesWaterslideEnum;
    /**
     * Indicates whether the entity has a wave pool.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    wavePool?: InlineResponse200ResponseEntitiesWavePoolEnum;
    /**
     * 
     * @type {InlineResponse200ResponseWebsiteUrl}
     * @memberof InlineResponse200ResponseEntities
     */
    websiteUrl?: InlineResponse200ResponseWebsiteUrl;
    /**
     * Indicates whether the entity has a weight machine.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    weightMachine?: InlineResponse200ResponseEntitiesWeightMachineEnum;
    /**
     * Indicates if the entity is wheelchair accessible.
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    wheelchairAccessible?: InlineResponse200ResponseEntitiesWheelchairAccessibleEnum;
    /**
     * Indicates whether the entity has WiFi available
     * 
     * Filtering Type: `option`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {string}
     * @memberof InlineResponse200ResponseEntities
     */
    wifiAvailable?: InlineResponse200ResponseEntitiesWifiAvailableEnum;
    /**
     * Indicates whether the job is remote.
     * 
     * Filtering Type: `boolean`
     * 
     * ```
     * Eligible For: 
     *    * job
     * ```
     * @type {boolean}
     * @memberof InlineResponse200ResponseEntities
     */
    workRemote?: boolean;
    /**
     * The year the entity was established.
     * 
     * Filtering Type: `integer`
     * 
     * ```
     * Eligible For: 
     *    * healthcareFacility
     *    * healthcareProfessional
     *    * hotel
     *    * location
     *    * restaurant
     * ```
     * @type {number}
     * @memberof InlineResponse200ResponseEntities
     */
    yearEstablished?: number;
    /**
     * The most recent year the entity was partially or completely renovated.
     * 
     * Filtering Type: `integer`
     * 
     * ```
     * Eligible For: 
     *    * hotel
     * ```
     * @type {number}
     * @memberof InlineResponse200ResponseEntities
     */
    yearLastRenovated?: number;
    /**
     * 
     * @type {InlineResponse200ResponseYextDisplayCoordinate}
     * @memberof InlineResponse200ResponseEntities
     */
    yextDisplayCoordinate?: InlineResponse200ResponseYextDisplayCoordinate;
    /**
     * 
     * @type {InlineResponse200ResponseYextDropoffCoordinate}
     * @memberof InlineResponse200ResponseEntities
     */
    yextDropoffCoordinate?: InlineResponse200ResponseYextDropoffCoordinate;
    /**
     * 
     * @type {InlineResponse200ResponseYextPickupCoordinate}
     * @memberof InlineResponse200ResponseEntities
     */
    yextPickupCoordinate?: InlineResponse200ResponseYextPickupCoordinate;
    /**
     * 
     * @type {InlineResponse200ResponseYextRoutableCoordinate}
     * @memberof InlineResponse200ResponseEntities
     */
    yextRoutableCoordinate?: InlineResponse200ResponseYextRoutableCoordinate;
    /**
     * 
     * @type {InlineResponse200ResponseYextWalkableCoordinate}
     * @memberof InlineResponse200ResponseEntities
     */
    yextWalkableCoordinate?: InlineResponse200ResponseYextWalkableCoordinate;
}

/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesAdultPoolEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesAirportShuttleEnum {
    AirportShuttleAvailable = 'AIRPORT_SHUTTLE_AVAILABLE',
    AirportShuttleAvailableForFree = 'AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesAirportTransferEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesAllInclusiveEnum {
    AllInclusiveRatesAvailable = 'ALL_INCLUSIVE_RATES_AVAILABLE',
    AllInclusiveRatesOnly = 'ALL_INCLUSIVE_RATES_ONLY',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesAttireEnum {
    Unspecified = 'UNSPECIFIED',
    Dressy = 'DRESSY',
    Casual = 'CASUAL',
    Formal = 'FORMAL'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesBabysittingOfferedEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesBaggageStorageEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesBarEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesBeachAccessEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesBeachFrontPropertyEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesBicyclesEnum {
    BicycleRentals = 'BICYCLE_RENTALS',
    BicycleRentalsForFree = 'BICYCLE_RENTALS_FOR_FREE',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesBoutiqueStoresEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesBreakfastEnum {
    BreakfastAvailable = 'BREAKFAST_AVAILABLE',
    BreakfastAvailableForFree = 'BREAKFAST_AVAILABLE_FOR_FREE',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesBusinessCenterEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesCarRentalEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesCasinoEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesCatsAllowedEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesConciergeEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesConvenienceStoreEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesCurrencyExchangeEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesDegreesEnum {
    Anp = 'ANP',
    Apn = 'APN',
    Aprn = 'APRN',
    Arnp = 'ARNP',
    Cnm = 'CNM',
    Cnp = 'CNP',
    Cns = 'CNS',
    Cpnp = 'CPNP',
    Crna = 'CRNA',
    Crnp = 'CRNP',
    Dc = 'DC',
    Dds = 'DDS',
    Dmd = 'DMD',
    Dnp = 'DNP',
    Do = 'DO',
    Dpm = 'DPM',
    Dvm = 'DVM',
    Fnp = 'FNP',
    Gnp = 'GNP',
    Lac = 'LAC',
    Lpn = 'LPN',
    Mba = 'MBA',
    Mbbs = 'MBBS',
    Md = 'MD',
    Mph = 'MPH',
    Nd = 'ND',
    Np = 'NP',
    Od = 'OD',
    Pa = 'PA',
    Pac = 'PAC',
    Pharmd = 'PHARMD',
    Phd = 'PHD',
    Pnp = 'PNP',
    Psyd = 'PSYD',
    Vmd = 'VMD',
    Whnp = 'WHNP'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesDoctorOnCallEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesDogsAllowedEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesElectricChargingStationEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesElevatorEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesEllipticalMachineEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesEmploymentTypeEnum {
    FullTime = 'FULL_TIME',
    PartTime = 'PART_TIME',
    Contractor = 'CONTRACTOR',
    Temporary = 'TEMPORARY',
    Intern = 'INTERN',
    Volunteer = 'VOLUNTEER',
    PerDiem = 'PER_DIEM',
    Other = 'OTHER'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesEventStatusEnum {
    Scheduled = 'SCHEDULED',
    Rescheduled = 'RESCHEDULED',
    Postponed = 'POSTPONED',
    Canceled = 'CANCELED',
    EventMovedOnline = 'EVENT_MOVED_ONLINE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesFitnessCenterEnum {
    FitnessCenterAvailable = 'FITNESS_CENTER_AVAILABLE',
    FitnessCenterAvailableForFree = 'FITNESS_CENTER_AVAILABLE_FOR_FREE',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesFreeWeightsEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesFrontDeskEnum {
    FrontDeskAvailable = 'FRONT_DESK_AVAILABLE',
    FrontDeskAvailable24Hours = 'FRONT_DESK_AVAILABLE_24_HOURS',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesGameRoomEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesGenderEnum {
    Unspecified = 'UNSPECIFIED',
    Female = 'FEMALE',
    Male = 'MALE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesGiftShopEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesGolfEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesHorsebackRidingEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesHotTubEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesHousekeepingEnum {
    HousekeepingAvailable = 'HOUSEKEEPING_AVAILABLE',
    HousekeepingAvailableDaily = 'HOUSEKEEPING_AVAILABLE_DAILY',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesKidFriendlyEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesKidsClubEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesKidsStayFreeEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesLaundryEnum {
    FullService = 'FULL_SERVICE',
    SelfService = 'SELF_SERVICE',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesLazyRiverEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesLifeguardEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesLocalShuttleEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesLocationTypeEnum {
    Location = 'LOCATION',
    HealthcareFacility = 'HEALTHCARE_FACILITY',
    HealthcareProfessional = 'HEALTHCARE_PROFESSIONAL',
    Atm = 'ATM',
    Restaurant = 'RESTAURANT',
    Hotel = 'HOTEL'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesMassageEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesMealsServedEnum {
    Breakfast = 'BREAKFAST',
    Lunch = 'LUNCH',
    Brunch = 'BRUNCH',
    Dinner = 'DINNER',
    HappyHour = 'HAPPY_HOUR',
    LateNight = 'LATE_NIGHT'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesMobilityAccessibleEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesNightclubEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesParkingEnum {
    ParkingAvailable = 'PARKING_AVAILABLE',
    ParkingAvailableForFree = 'PARKING_AVAILABLE_FOR_FREE',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesPaymentOptionsEnum {
    Alipay = 'ALIPAY',
    Americanexpress = 'AMERICANEXPRESS',
    Androidpay = 'ANDROIDPAY',
    Applepay = 'APPLEPAY',
    Atm = 'ATM',
    Atmquick = 'ATMQUICK',
    Bacs = 'BACS',
    Bancontact = 'BANCONTACT',
    Bankdeposit = 'BANKDEPOSIT',
    Bankpay = 'BANKPAY',
    Bgo = 'BGO',
    Bitcoin = 'BITCOIN',
    Bar = 'Bar',
    Cartasi = 'CARTASI',
    Cash = 'CASH',
    Ccs = 'CCS',
    Check = 'CHECK',
    Conb = 'CONB',
    Cvvv = 'CVVV',
    Debitnote = 'DEBITNOTE',
    Dinersclub = 'DINERSCLUB',
    Directdebit = 'DIRECTDEBIT',
    Discover = 'DISCOVER',
    Eckarte = 'ECKARTE',
    Ecocheque = 'ECOCHEQUE',
    Ekena = 'EKENA',
    Emv = 'EMV',
    Financing = 'FINANCING',
    Gopay = 'GOPAY',
    Hayakaken = 'HAYAKAKEN',
    Hebag = 'HEBAG',
    Ibod = 'IBOD',
    Iccards = 'ICCARDS',
    Icoca = 'ICOCA',
    Id = 'ID',
    Ideal = 'IDEAL',
    Inca = 'INCA',
    Invoice = 'INVOICE',
    Jcb = 'JCB',
    JCoinPay = 'JCoinPay',
    Jkopay = 'JKOPAY',
    Kitaca = 'KITACA',
    Kla = 'KLA',
    Klarna = 'KLARNA',
    Linepay = 'LINEPAY',
    Maestro = 'MAESTRO',
    Manaca = 'MANACA',
    Mastercard = 'MASTERCARD',
    Mipay = 'MIPAY',
    Monizze = 'MONIZZE',
    Mpay = 'MPAY',
    ManuelleLastsch = 'Manuelle Lastsch',
    Merpay = 'Merpay',
    Nanaco = 'NANACO',
    Nexi = 'NEXI',
    Nimoca = 'NIMOCA',
    Orem = 'OREM',
    Pasmo = 'PASMO',
    Paybackpay = 'PAYBACKPAY',
    Paybox = 'PAYBOX',
    Payconiq = 'PAYCONIQ',
    Paypal = 'PAYPAL',
    Paypay = 'PAYPAY',
    Paysec = 'PAYSEC',
    Pin = 'PIN',
    Postepay = 'POSTEPAY',
    Qrcode = 'QRCODE',
    Quicpay = 'QUICPAY',
    Rakutenedy = 'RAKUTENEDY',
    Rakutenpay = 'RAKUTENPAY',
    Samsungpay = 'SAMSUNGPAY',
    Sodexo = 'SODEXO',
    Sugoca = 'SUGOCA',
    Suica = 'SUICA',
    Swish = 'SWISH',
    Ticketrestaurant = 'TICKETRESTAURANT',
    Toica = 'TOICA',
    Travelerscheck = 'TRAVELERSCHECK',
    Tscubic = 'TSCUBIC',
    Twint = 'TWINT',
    Unionpay = 'UNIONPAY',
    Vev = 'VEV',
    Visa = 'VISA',
    Visaelectron = 'VISAELECTRON',
    Vob = 'VOB',
    Voucher = 'VOUCHER',
    Vpay = 'VPAY',
    Waon = 'WAON',
    Wechatpay = 'WECHATPAY',
    Wiretransfer = 'WIRETRANSFER',
    YuchoPay = 'Yucho Pay',
    Zelle = 'ZELLE',
    AuPay = 'auPay',
    DBarai = 'dBarai',
    Berweisung = 'Überweisung'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesPetsAllowedEnum {
    PetsWelcome = 'PETS_WELCOME',
    PetsWelcomeForFree = 'PETS_WELCOME_FOR_FREE',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesPriceRangeEnum {
    Unspecified = 'UNSPECIFIED',
    One = 'ONE',
    Two = 'TWO',
    Three = 'THREE',
    Four = 'FOUR'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesPrivateBeachEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesPrivateCarServiceEnum {
    PrivateCarService = 'PRIVATE_CAR_SERVICE',
    PrivateCarServiceForFree = 'PRIVATE_CAR_SERVICE_FOR_FREE',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesRankTrackingFrequencyEnum {
    Weekly = 'WEEKLY',
    Monthly = 'MONTHLY',
    Quarterly = 'QUARTERLY'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesRankTrackingQueryTemplatesEnum {
    Keyword = 'KEYWORD',
    KeywordZip = 'KEYWORD_ZIP',
    KeywordCity = 'KEYWORD_CITY',
    KeywordInCity = 'KEYWORD_IN_CITY',
    KeywordNearMe = 'KEYWORD_NEAR_ME',
    KeywordCityState = 'KEYWORD_CITY_STATE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesRankTrackingSitesEnum {
    GoogleDesktop = 'GOOGLE_DESKTOP',
    GoogleMobile = 'GOOGLE_MOBILE',
    BingDesktop = 'BING_DESKTOP',
    BingMobile = 'BING_MOBILE',
    YahooDesktop = 'YAHOO_DESKTOP',
    YahooMobile = 'YAHOO_MOBILE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesRoomServiceEnum {
    RoomServiceAvailable = 'ROOM_SERVICE_AVAILABLE',
    RoomServiceAvailable24Hours = 'ROOM_SERVICE_AVAILABLE_24_HOURS',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesSalonEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesSaunaEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesScubaEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesSelfParkingEnum {
    SelfParkingAvailable = 'SELF_PARKING_AVAILABLE',
    SelfParkingAvailableForFree = 'SELF_PARKING_AVAILABLE_FOR_FREE',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesSmokeFreePropertyEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesSnorkelingEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesSocialHourEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesSpaEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesTableServiceEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesTennisEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesThermalPoolEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesTicketAvailabilityEnum {
    InStock = 'IN_STOCK',
    SoldOut = 'SOLD_OUT',
    PreOrder = 'PRE_ORDER',
    Unspecified = 'UNSPECIFIED'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesTreadmillEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesTurndownServiceEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesValetParkingEnum {
    ValetParkingAvailable = 'VALET_PARKING_AVAILABLE',
    ValetParkingAvailableForFree = 'VALET_PARKING_AVAILABLE_FOR_FREE',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesVendingMachineEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesWadingPoolEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesWakeUpCallsEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesWaterParkEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesWaterSkiingEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesWatercraftEnum {
    WatercraftRentals = 'WATERCRAFT_RENTALS',
    WatercraftRentalsForFree = 'WATERCRAFT_RENTALS_FOR_FREE',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesWaterslideEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesWavePoolEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesWeightMachineEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesWheelchairAccessibleEnum {
    Yes = 'YES',
    No = 'NO',
    NotApplicable = 'NOT_APPLICABLE'
}/**
* @export
* @enum {string}
*/
export enum InlineResponse200ResponseEntitiesWifiAvailableEnum {
    WifiAvailable = 'WIFI_AVAILABLE',
    WifiAvailableForFree = 'WIFI_AVAILABLE_FOR_FREE',
    NotApplicable = 'NOT_APPLICABLE'
}

export function InlineResponse200ResponseEntitiesFromJSON(json: any): InlineResponse200ResponseEntities {
    return InlineResponse200ResponseEntitiesFromJSONTyped(json, false);
}

export function InlineResponse200ResponseEntitiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse200ResponseEntities {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'meta': !exists(json, 'meta') ? undefined : InlineResponse200ResponseMetaFromJSON(json['meta']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'address': !exists(json, 'address') ? undefined : InlineResponse200ResponseAddressFromJSON(json['address']),
        'acceptingNewPatients': !exists(json, 'acceptingNewPatients') ? undefined : json['acceptingNewPatients'],
        'acceptsReservations': !exists(json, 'acceptsReservations') ? undefined : json['acceptsReservations'],
        'accessHours': !exists(json, 'accessHours') ? undefined : InlineResponse200ResponseAccessHoursFromJSON(json['accessHours']),
        'additionalHoursText': !exists(json, 'additionalHoursText') ? undefined : json['additionalHoursText'],
        'additionalPromotingLocations': !exists(json, 'additionalPromotingLocations') ? undefined : json['additionalPromotingLocations'],
        'addressHidden': !exists(json, 'addressHidden') ? undefined : json['addressHidden'],
        'admittingHospitals': !exists(json, 'admittingHospitals') ? undefined : json['admittingHospitals'],
        'adultPool': !exists(json, 'adultPool') ? undefined : json['adultPool'],
        'ageRange': !exists(json, 'ageRange') ? undefined : InlineResponse200ResponseAgeRangeFromJSON(json['ageRange']),
        'airportShuttle': !exists(json, 'airportShuttle') ? undefined : json['airportShuttle'],
        'airportTransfer': !exists(json, 'airportTransfer') ? undefined : json['airportTransfer'],
        'allInclusive': !exists(json, 'allInclusive') ? undefined : json['allInclusive'],
        'alternateNames': !exists(json, 'alternateNames') ? undefined : json['alternateNames'],
        'alternatePhone': !exists(json, 'alternatePhone') ? undefined : json['alternatePhone'],
        'alternateWebsites': !exists(json, 'alternateWebsites') ? undefined : json['alternateWebsites'],
        'androidAppUrl': !exists(json, 'androidAppUrl') ? undefined : json['androidAppUrl'],
        'answer': !exists(json, 'answer') ? undefined : json['answer'],
        'applicationUrl': !exists(json, 'applicationUrl') ? undefined : json['applicationUrl'],
        'associations': !exists(json, 'associations') ? undefined : json['associations'],
        'attendance': !exists(json, 'attendance') ? undefined : InlineResponse200ResponseAttendanceFromJSON(json['attendance']),
        'attire': !exists(json, 'attire') ? undefined : json['attire'],
        'babysittingOffered': !exists(json, 'babysittingOffered') ? undefined : json['babysittingOffered'],
        'baggageStorage': !exists(json, 'baggageStorage') ? undefined : json['baggageStorage'],
        'bar': !exists(json, 'bar') ? undefined : json['bar'],
        'beachAccess': !exists(json, 'beachAccess') ? undefined : json['beachAccess'],
        'beachFrontProperty': !exists(json, 'beachFrontProperty') ? undefined : json['beachFrontProperty'],
        'bicycles': !exists(json, 'bicycles') ? undefined : json['bicycles'],
        'bios': !exists(json, 'bios') ? undefined : InlineResponse200ResponseBiosFromJSON(json['bios']),
        'boutiqueStores': !exists(json, 'boutiqueStores') ? undefined : json['boutiqueStores'],
        'brands': !exists(json, 'brands') ? undefined : json['brands'],
        'breakfast': !exists(json, 'breakfast') ? undefined : json['breakfast'],
        'brunchHours': !exists(json, 'brunchHours') ? undefined : InlineResponse200ResponseBrunchHoursFromJSON(json['brunchHours']),
        'businessCenter': !exists(json, 'businessCenter') ? undefined : json['businessCenter'],
        'calendars': !exists(json, 'calendars') ? undefined : InlineResponse200ResponseCalendarsFromJSON(json['calendars']),
        'carRental': !exists(json, 'carRental') ? undefined : json['carRental'],
        'casino': !exists(json, 'casino') ? undefined : json['casino'],
        'categoryIds': !exists(json, 'categoryIds') ? undefined : json['categoryIds'],
        'catsAllowed': !exists(json, 'catsAllowed') ? undefined : json['catsAllowed'],
        'certifications': !exists(json, 'certifications') ? undefined : json['certifications'],
        'checkInTime': !exists(json, 'checkInTime') ? undefined : json['checkInTime'],
        'checkOutTime': !exists(json, 'checkOutTime') ? undefined : json['checkOutTime'],
        'classificationRating': !exists(json, 'classificationRating') ? undefined : json['classificationRating'],
        'closed': !exists(json, 'closed') ? undefined : json['closed'],
        'concierge': !exists(json, 'concierge') ? undefined : json['concierge'],
        'conditionsTreated': !exists(json, 'conditionsTreated') ? undefined : json['conditionsTreated'],
        'convenienceStore': !exists(json, 'convenienceStore') ? undefined : json['convenienceStore'],
        'currencyExchange': !exists(json, 'currencyExchange') ? undefined : json['currencyExchange'],
        'customKeywords': !exists(json, 'customKeywords') ? undefined : json['customKeywords'],
        'datePosted': !exists(json, 'datePosted') ? undefined : (new Date(json['datePosted'])),
        'degrees': !exists(json, 'degrees') ? undefined : json['degrees'],
        'deliveryHours': !exists(json, 'deliveryHours') ? undefined : InlineResponse200ResponseDeliveryHoursFromJSON(json['deliveryHours']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'displayCoordinate': !exists(json, 'displayCoordinate') ? undefined : InlineResponse200ResponseDisplayCoordinateFromJSON(json['displayCoordinate']),
        'doctorOnCall': !exists(json, 'doctorOnCall') ? undefined : json['doctorOnCall'],
        'dogsAllowed': !exists(json, 'dogsAllowed') ? undefined : json['dogsAllowed'],
        'driveThroughHours': !exists(json, 'driveThroughHours') ? undefined : InlineResponse200ResponseDriveThroughHoursFromJSON(json['driveThroughHours']),
        'dropoffCoordinate': !exists(json, 'dropoffCoordinate') ? undefined : InlineResponse200ResponseDropoffCoordinateFromJSON(json['dropoffCoordinate']),
        'educationList': !exists(json, 'educationList') ? undefined : (new Set((json['educationList'] as Array<any>).map(InlineResponse200ResponseEducationListFromJSON))),
        'electricChargingStation': !exists(json, 'electricChargingStation') ? undefined : json['electricChargingStation'],
        'elevator': !exists(json, 'elevator') ? undefined : json['elevator'],
        'ellipticalMachine': !exists(json, 'ellipticalMachine') ? undefined : json['ellipticalMachine'],
        'emails': !exists(json, 'emails') ? undefined : json['emails'],
        'employmentType': !exists(json, 'employmentType') ? undefined : json['employmentType'],
        'eventStatus': !exists(json, 'eventStatus') ? undefined : json['eventStatus'],
        'facebookCallToAction': !exists(json, 'facebookCallToAction') ? undefined : InlineResponse200ResponseFacebookCallToActionFromJSON(json['facebookCallToAction']),
        'facebookCoverPhoto': !exists(json, 'facebookCoverPhoto') ? undefined : InlineResponse200ResponseFacebookCoverPhotoFromJSON(json['facebookCoverPhoto']),
        'facebookDescriptor': !exists(json, 'facebookDescriptor') ? undefined : json['facebookDescriptor'],
        'facebookName': !exists(json, 'facebookName') ? undefined : json['facebookName'],
        'facebookOverrideCity': !exists(json, 'facebookOverrideCity') ? undefined : json['facebookOverrideCity'],
        'facebookPageUrl': !exists(json, 'facebookPageUrl') ? undefined : json['facebookPageUrl'],
        'facebookProfilePhoto': !exists(json, 'facebookProfilePhoto') ? undefined : InlineResponse200ResponseFacebookProfilePhotoFromJSON(json['facebookProfilePhoto']),
        'facebookVanityUrl': !exists(json, 'facebookVanityUrl') ? undefined : json['facebookVanityUrl'],
        'fax': !exists(json, 'fax') ? undefined : json['fax'],
        'featuredMessage': !exists(json, 'featuredMessage') ? undefined : InlineResponse200ResponseFeaturedMessageFromJSON(json['featuredMessage']),
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'firstPartyReviewPage': !exists(json, 'firstPartyReviewPage') ? undefined : json['firstPartyReviewPage'],
        'fitnessCenter': !exists(json, 'fitnessCenter') ? undefined : json['fitnessCenter'],
        'floorCount': !exists(json, 'floorCount') ? undefined : json['floorCount'],
        'freeWeights': !exists(json, 'freeWeights') ? undefined : json['freeWeights'],
        'frequentlyAskedQuestions': !exists(json, 'frequentlyAskedQuestions') ? undefined : (new Set((json['frequentlyAskedQuestions'] as Array<any>).map(InlineResponse200ResponseFrequentlyAskedQuestionsFromJSON))),
        'frontDesk': !exists(json, 'frontDesk') ? undefined : json['frontDesk'],
        'gameRoom': !exists(json, 'gameRoom') ? undefined : json['gameRoom'],
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'geomodifier': !exists(json, 'geomodifier') ? undefined : json['geomodifier'],
        'giftShop': !exists(json, 'giftShop') ? undefined : json['giftShop'],
        'golf': !exists(json, 'golf') ? undefined : json['golf'],
        'googleAttributes': !exists(json, 'googleAttributes') ? undefined : json['googleAttributes'],
        'googleCoverPhoto': !exists(json, 'googleCoverPhoto') ? undefined : InlineResponse200ResponseGoogleCoverPhotoFromJSON(json['googleCoverPhoto']),
        'googleMyBusinessLabels': !exists(json, 'googleMyBusinessLabels') ? undefined : json['googleMyBusinessLabels'],
        'googlePlaceId': !exists(json, 'googlePlaceId') ? undefined : json['googlePlaceId'],
        'googleProfilePhoto': !exists(json, 'googleProfilePhoto') ? undefined : InlineResponse200ResponseGoogleProfilePhotoFromJSON(json['googleProfilePhoto']),
        'googleWebsiteOverride': !exists(json, 'googleWebsiteOverride') ? undefined : json['googleWebsiteOverride'],
        'happyHours': !exists(json, 'happyHours') ? undefined : InlineResponse200ResponseHappyHoursFromJSON(json['happyHours']),
        'headshot': !exists(json, 'headshot') ? undefined : InlineResponse200ResponseHeadshotFromJSON(json['headshot']),
        'hiringOrganization': !exists(json, 'hiringOrganization') ? undefined : json['hiringOrganization'],
        'holidayHoursConversationEnabled': !exists(json, 'holidayHoursConversationEnabled') ? undefined : json['holidayHoursConversationEnabled'],
        'horsebackRiding': !exists(json, 'horsebackRiding') ? undefined : json['horsebackRiding'],
        'hotTub': !exists(json, 'hotTub') ? undefined : json['hotTub'],
        'hours': !exists(json, 'hours') ? undefined : InlineResponse200ResponseHoursFromJSON(json['hours']),
        'housekeeping': !exists(json, 'housekeeping') ? undefined : json['housekeeping'],
        'impressum': !exists(json, 'impressum') ? undefined : json['impressum'],
        'indoorPoolCount': !exists(json, 'indoorPoolCount') ? undefined : json['indoorPoolCount'],
        'instagramHandle': !exists(json, 'instagramHandle') ? undefined : json['instagramHandle'],
        'insuranceAccepted': !exists(json, 'insuranceAccepted') ? undefined : json['insuranceAccepted'],
        'iosAppUrl': !exists(json, 'iosAppUrl') ? undefined : json['iosAppUrl'],
        'isClusterPrimary': !exists(json, 'isClusterPrimary') ? undefined : json['isClusterPrimary'],
        'isFreeEvent': !exists(json, 'isFreeEvent') ? undefined : json['isFreeEvent'],
        'isoRegionCode': !exists(json, 'isoRegionCode') ? undefined : json['isoRegionCode'],
        'keywords': !exists(json, 'keywords') ? undefined : json['keywords'],
        'kidFriendly': !exists(json, 'kidFriendly') ? undefined : json['kidFriendly'],
        'kidsClub': !exists(json, 'kidsClub') ? undefined : json['kidsClub'],
        'kidsStayFree': !exists(json, 'kidsStayFree') ? undefined : json['kidsStayFree'],
        'kitchenHours': !exists(json, 'kitchenHours') ? undefined : InlineResponse200ResponseKitchenHoursFromJSON(json['kitchenHours']),
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'landingPageUrl': !exists(json, 'landingPageUrl') ? undefined : json['landingPageUrl'],
        'languages': !exists(json, 'languages') ? undefined : json['languages'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'laundry': !exists(json, 'laundry') ? undefined : json['laundry'],
        'lazyRiver': !exists(json, 'lazyRiver') ? undefined : json['lazyRiver'],
        'lifeguard': !exists(json, 'lifeguard') ? undefined : json['lifeguard'],
        'linkedLocation': !exists(json, 'linkedLocation') ? undefined : json['linkedLocation'],
        'localPhone': !exists(json, 'localPhone') ? undefined : json['localPhone'],
        'localShuttle': !exists(json, 'localShuttle') ? undefined : json['localShuttle'],
        'locatedIn': !exists(json, 'locatedIn') ? undefined : json['locatedIn'],
        'location': !exists(json, 'location') ? undefined : InlineResponse200ResponseLocationFromJSON(json['location']),
        'locationType': !exists(json, 'locationType') ? undefined : json['locationType'],
        'logo': !exists(json, 'logo') ? undefined : InlineResponse200ResponseLogoFromJSON(json['logo']),
        'mainPhone': !exists(json, 'mainPhone') ? undefined : json['mainPhone'],
        'massage': !exists(json, 'massage') ? undefined : json['massage'],
        'maxAgeOfKidsStayFree': !exists(json, 'maxAgeOfKidsStayFree') ? undefined : json['maxAgeOfKidsStayFree'],
        'maxNumberOfKidsStayFree': !exists(json, 'maxNumberOfKidsStayFree') ? undefined : json['maxNumberOfKidsStayFree'],
        'mealsServed': !exists(json, 'mealsServed') ? undefined : json['mealsServed'],
        'meetingRoomCount': !exists(json, 'meetingRoomCount') ? undefined : json['meetingRoomCount'],
        'menuUrl': !exists(json, 'menuUrl') ? undefined : InlineResponse200ResponseMenuUrlFromJSON(json['menuUrl']),
        'menus': !exists(json, 'menus') ? undefined : InlineResponse200ResponseMenusFromJSON(json['menus']),
        'middleName': !exists(json, 'middleName') ? undefined : json['middleName'],
        'mobilePhone': !exists(json, 'mobilePhone') ? undefined : json['mobilePhone'],
        'mobilityAccessible': !exists(json, 'mobilityAccessible') ? undefined : json['mobilityAccessible'],
        'nightclub': !exists(json, 'nightclub') ? undefined : json['nightclub'],
        'npi': !exists(json, 'npi') ? undefined : json['npi'],
        'nudgeEnabled': !exists(json, 'nudgeEnabled') ? undefined : json['nudgeEnabled'],
        'officeName': !exists(json, 'officeName') ? undefined : json['officeName'],
        'onlineServiceHours': !exists(json, 'onlineServiceHours') ? undefined : InlineResponse200ResponseOnlineServiceHoursFromJSON(json['onlineServiceHours']),
        'orderUrl': !exists(json, 'orderUrl') ? undefined : InlineResponse200ResponseOrderUrlFromJSON(json['orderUrl']),
        'organizerEmail': !exists(json, 'organizerEmail') ? undefined : json['organizerEmail'],
        'organizerName': !exists(json, 'organizerName') ? undefined : json['organizerName'],
        'organizerPhone': !exists(json, 'organizerPhone') ? undefined : json['organizerPhone'],
        'outdoorPoolCount': !exists(json, 'outdoorPoolCount') ? undefined : json['outdoorPoolCount'],
        'parking': !exists(json, 'parking') ? undefined : json['parking'],
        'paymentOptions': !exists(json, 'paymentOptions') ? undefined : json['paymentOptions'],
        'performers': !exists(json, 'performers') ? undefined : json['performers'],
        'petsAllowed': !exists(json, 'petsAllowed') ? undefined : json['petsAllowed'],
        'photoGallery': !exists(json, 'photoGallery') ? undefined : ((json['photoGallery'] as Array<any>).map(InlineResponse200ResponsePhotoGalleryFromJSON)),
        'pickupCoordinate': !exists(json, 'pickupCoordinate') ? undefined : InlineResponse200ResponsePickupCoordinateFromJSON(json['pickupCoordinate']),
        'pickupHours': !exists(json, 'pickupHours') ? undefined : InlineResponse200ResponsePickupHoursFromJSON(json['pickupHours']),
        'priceRange': !exists(json, 'priceRange') ? undefined : json['priceRange'],
        'primaryConversationContact': !exists(json, 'primaryConversationContact') ? undefined : json['primaryConversationContact'],
        'privateBeach': !exists(json, 'privateBeach') ? undefined : json['privateBeach'],
        'privateCarService': !exists(json, 'privateCarService') ? undefined : json['privateCarService'],
        'productLists': !exists(json, 'productLists') ? undefined : InlineResponse200ResponseProductListsFromJSON(json['productLists']),
        'products': !exists(json, 'products') ? undefined : json['products'],
        'questionsAndAnswers': !exists(json, 'questionsAndAnswers') ? undefined : json['questionsAndAnswers'],
        'rankTrackingCompetitors': !exists(json, 'rankTrackingCompetitors') ? undefined : (new Set((json['rankTrackingCompetitors'] as Array<any>).map(InlineResponse200ResponseRankTrackingCompetitorsFromJSON))),
        'rankTrackingEnabled': !exists(json, 'rankTrackingEnabled') ? undefined : json['rankTrackingEnabled'],
        'rankTrackingFrequency': !exists(json, 'rankTrackingFrequency') ? undefined : json['rankTrackingFrequency'],
        'rankTrackingQueryTemplates': !exists(json, 'rankTrackingQueryTemplates') ? undefined : json['rankTrackingQueryTemplates'],
        'rankTrackingSites': !exists(json, 'rankTrackingSites') ? undefined : json['rankTrackingSites'],
        'reservationUrl': !exists(json, 'reservationUrl') ? undefined : InlineResponse200ResponseReservationUrlFromJSON(json['reservationUrl']),
        'restaurantCount': !exists(json, 'restaurantCount') ? undefined : json['restaurantCount'],
        'reviewGenerationUrl': !exists(json, 'reviewGenerationUrl') ? undefined : json['reviewGenerationUrl'],
        'reviewResponseConversationEnabled': !exists(json, 'reviewResponseConversationEnabled') ? undefined : json['reviewResponseConversationEnabled'],
        'roomCount': !exists(json, 'roomCount') ? undefined : json['roomCount'],
        'roomService': !exists(json, 'roomService') ? undefined : json['roomService'],
        'routableCoordinate': !exists(json, 'routableCoordinate') ? undefined : InlineResponse200ResponseRoutableCoordinateFromJSON(json['routableCoordinate']),
        'salon': !exists(json, 'salon') ? undefined : json['salon'],
        'sauna': !exists(json, 'sauna') ? undefined : json['sauna'],
        'scuba': !exists(json, 'scuba') ? undefined : json['scuba'],
        'selfParking': !exists(json, 'selfParking') ? undefined : json['selfParking'],
        'seniorHours': !exists(json, 'seniorHours') ? undefined : InlineResponse200ResponseSeniorHoursFromJSON(json['seniorHours']),
        'serviceArea': !exists(json, 'serviceArea') ? undefined : InlineResponse200ResponseServiceAreaFromJSON(json['serviceArea']),
        'serviceAreaPlaces': !exists(json, 'serviceAreaPlaces') ? undefined : (new Set((json['serviceAreaPlaces'] as Array<any>).map(InlineResponse200ResponseServiceAreaPlacesFromJSON))),
        'services': !exists(json, 'services') ? undefined : json['services'],
        'smokeFreeProperty': !exists(json, 'smokeFreeProperty') ? undefined : json['smokeFreeProperty'],
        'snorkeling': !exists(json, 'snorkeling') ? undefined : json['snorkeling'],
        'socialHour': !exists(json, 'socialHour') ? undefined : json['socialHour'],
        'spa': !exists(json, 'spa') ? undefined : json['spa'],
        'specialities': !exists(json, 'specialities') ? undefined : json['specialities'],
        'tableService': !exists(json, 'tableService') ? undefined : json['tableService'],
        'takeoutHours': !exists(json, 'takeoutHours') ? undefined : InlineResponse200ResponseTakeoutHoursFromJSON(json['takeoutHours']),
        'tennis': !exists(json, 'tennis') ? undefined : json['tennis'],
        'thermalPool': !exists(json, 'thermalPool') ? undefined : json['thermalPool'],
        'ticketAvailability': !exists(json, 'ticketAvailability') ? undefined : json['ticketAvailability'],
        'ticketPriceRange': !exists(json, 'ticketPriceRange') ? undefined : InlineResponse200ResponseTicketPriceRangeFromJSON(json['ticketPriceRange']),
        'ticketSaleDateTime': !exists(json, 'ticketSaleDateTime') ? undefined : (new Date(json['ticketSaleDateTime'])),
        'ticketUrl': !exists(json, 'ticketUrl') ? undefined : json['ticketUrl'],
        'time': !exists(json, 'time') ? undefined : InlineResponse200ResponseTimeFromJSON(json['time']),
        'timeZoneUtcOffset': !exists(json, 'timeZoneUtcOffset') ? undefined : json['timeZoneUtcOffset'],
        'timezone': !exists(json, 'timezone') ? undefined : json['timezone'],
        'tollFreePhone': !exists(json, 'tollFreePhone') ? undefined : json['tollFreePhone'],
        'treadmill': !exists(json, 'treadmill') ? undefined : json['treadmill'],
        'ttyPhone': !exists(json, 'ttyPhone') ? undefined : json['ttyPhone'],
        'turndownService': !exists(json, 'turndownService') ? undefined : json['turndownService'],
        'twitterHandle': !exists(json, 'twitterHandle') ? undefined : json['twitterHandle'],
        'uberLink': !exists(json, 'uberLink') ? undefined : InlineResponse200ResponseUberLinkFromJSON(json['uberLink']),
        'uberTripBranding': !exists(json, 'uberTripBranding') ? undefined : InlineResponse200ResponseUberTripBrandingFromJSON(json['uberTripBranding']),
        'valetParking': !exists(json, 'valetParking') ? undefined : json['valetParking'],
        'validThrough': !exists(json, 'validThrough') ? undefined : (new Date(json['validThrough'])),
        'vendingMachine': !exists(json, 'vendingMachine') ? undefined : json['vendingMachine'],
        'venueName': !exists(json, 'venueName') ? undefined : json['venueName'],
        'videos': !exists(json, 'videos') ? undefined : (new Set((json['videos'] as Array<any>).map(InlineResponse200ResponseVideosFromJSON))),
        'wadingPool': !exists(json, 'wadingPool') ? undefined : json['wadingPool'],
        'wakeUpCalls': !exists(json, 'wakeUpCalls') ? undefined : json['wakeUpCalls'],
        'walkableCoordinate': !exists(json, 'walkableCoordinate') ? undefined : InlineResponse200ResponseWalkableCoordinateFromJSON(json['walkableCoordinate']),
        'waterPark': !exists(json, 'waterPark') ? undefined : json['waterPark'],
        'waterSkiing': !exists(json, 'waterSkiing') ? undefined : json['waterSkiing'],
        'watercraft': !exists(json, 'watercraft') ? undefined : json['watercraft'],
        'waterslide': !exists(json, 'waterslide') ? undefined : json['waterslide'],
        'wavePool': !exists(json, 'wavePool') ? undefined : json['wavePool'],
        'websiteUrl': !exists(json, 'websiteUrl') ? undefined : InlineResponse200ResponseWebsiteUrlFromJSON(json['websiteUrl']),
        'weightMachine': !exists(json, 'weightMachine') ? undefined : json['weightMachine'],
        'wheelchairAccessible': !exists(json, 'wheelchairAccessible') ? undefined : json['wheelchairAccessible'],
        'wifiAvailable': !exists(json, 'wifiAvailable') ? undefined : json['wifiAvailable'],
        'workRemote': !exists(json, 'workRemote') ? undefined : json['workRemote'],
        'yearEstablished': !exists(json, 'yearEstablished') ? undefined : json['yearEstablished'],
        'yearLastRenovated': !exists(json, 'yearLastRenovated') ? undefined : json['yearLastRenovated'],
        'yextDisplayCoordinate': !exists(json, 'yextDisplayCoordinate') ? undefined : InlineResponse200ResponseYextDisplayCoordinateFromJSON(json['yextDisplayCoordinate']),
        'yextDropoffCoordinate': !exists(json, 'yextDropoffCoordinate') ? undefined : InlineResponse200ResponseYextDropoffCoordinateFromJSON(json['yextDropoffCoordinate']),
        'yextPickupCoordinate': !exists(json, 'yextPickupCoordinate') ? undefined : InlineResponse200ResponseYextPickupCoordinateFromJSON(json['yextPickupCoordinate']),
        'yextRoutableCoordinate': !exists(json, 'yextRoutableCoordinate') ? undefined : InlineResponse200ResponseYextRoutableCoordinateFromJSON(json['yextRoutableCoordinate']),
        'yextWalkableCoordinate': !exists(json, 'yextWalkableCoordinate') ? undefined : InlineResponse200ResponseYextWalkableCoordinateFromJSON(json['yextWalkableCoordinate']),
    };
}

export function InlineResponse200ResponseEntitiesToJSON(value?: InlineResponse200ResponseEntities | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'meta': InlineResponse200ResponseMetaToJSON(value.meta),
        'name': value.name,
        'address': InlineResponse200ResponseAddressToJSON(value.address),
        'acceptingNewPatients': value.acceptingNewPatients,
        'acceptsReservations': value.acceptsReservations,
        'accessHours': InlineResponse200ResponseAccessHoursToJSON(value.accessHours),
        'additionalHoursText': value.additionalHoursText,
        'additionalPromotingLocations': value.additionalPromotingLocations,
        'addressHidden': value.addressHidden,
        'admittingHospitals': value.admittingHospitals,
        'adultPool': value.adultPool,
        'ageRange': InlineResponse200ResponseAgeRangeToJSON(value.ageRange),
        'airportShuttle': value.airportShuttle,
        'airportTransfer': value.airportTransfer,
        'allInclusive': value.allInclusive,
        'alternateNames': value.alternateNames,
        'alternatePhone': value.alternatePhone,
        'alternateWebsites': value.alternateWebsites,
        'androidAppUrl': value.androidAppUrl,
        'answer': value.answer,
        'applicationUrl': value.applicationUrl,
        'associations': value.associations,
        'attendance': InlineResponse200ResponseAttendanceToJSON(value.attendance),
        'attire': value.attire,
        'babysittingOffered': value.babysittingOffered,
        'baggageStorage': value.baggageStorage,
        'bar': value.bar,
        'beachAccess': value.beachAccess,
        'beachFrontProperty': value.beachFrontProperty,
        'bicycles': value.bicycles,
        'bios': InlineResponse200ResponseBiosToJSON(value.bios),
        'boutiqueStores': value.boutiqueStores,
        'brands': value.brands,
        'breakfast': value.breakfast,
        'brunchHours': InlineResponse200ResponseBrunchHoursToJSON(value.brunchHours),
        'businessCenter': value.businessCenter,
        'calendars': InlineResponse200ResponseCalendarsToJSON(value.calendars),
        'carRental': value.carRental,
        'casino': value.casino,
        'categoryIds': value.categoryIds,
        'catsAllowed': value.catsAllowed,
        'certifications': value.certifications,
        'checkInTime': value.checkInTime,
        'checkOutTime': value.checkOutTime,
        'classificationRating': value.classificationRating,
        'closed': value.closed,
        'concierge': value.concierge,
        'conditionsTreated': value.conditionsTreated,
        'convenienceStore': value.convenienceStore,
        'currencyExchange': value.currencyExchange,
        'customKeywords': value.customKeywords,
        'datePosted': value.datePosted === undefined ? undefined : (value.datePosted.toISOString().substr(0,10)),
        'degrees': value.degrees,
        'deliveryHours': InlineResponse200ResponseDeliveryHoursToJSON(value.deliveryHours),
        'description': value.description,
        'displayCoordinate': InlineResponse200ResponseDisplayCoordinateToJSON(value.displayCoordinate),
        'doctorOnCall': value.doctorOnCall,
        'dogsAllowed': value.dogsAllowed,
        'driveThroughHours': InlineResponse200ResponseDriveThroughHoursToJSON(value.driveThroughHours),
        'dropoffCoordinate': InlineResponse200ResponseDropoffCoordinateToJSON(value.dropoffCoordinate),
        'educationList': value.educationList === undefined ? undefined : (Array.from(value.educationList as Set<any>).map(InlineResponse200ResponseEducationListToJSON)),
        'electricChargingStation': value.electricChargingStation,
        'elevator': value.elevator,
        'ellipticalMachine': value.ellipticalMachine,
        'emails': value.emails,
        'employmentType': value.employmentType,
        'eventStatus': value.eventStatus,
        'facebookCallToAction': InlineResponse200ResponseFacebookCallToActionToJSON(value.facebookCallToAction),
        'facebookCoverPhoto': InlineResponse200ResponseFacebookCoverPhotoToJSON(value.facebookCoverPhoto),
        'facebookDescriptor': value.facebookDescriptor,
        'facebookName': value.facebookName,
        'facebookOverrideCity': value.facebookOverrideCity,
        'facebookPageUrl': value.facebookPageUrl,
        'facebookProfilePhoto': InlineResponse200ResponseFacebookProfilePhotoToJSON(value.facebookProfilePhoto),
        'facebookVanityUrl': value.facebookVanityUrl,
        'fax': value.fax,
        'featuredMessage': InlineResponse200ResponseFeaturedMessageToJSON(value.featuredMessage),
        'firstName': value.firstName,
        'firstPartyReviewPage': value.firstPartyReviewPage,
        'fitnessCenter': value.fitnessCenter,
        'floorCount': value.floorCount,
        'freeWeights': value.freeWeights,
        'frequentlyAskedQuestions': value.frequentlyAskedQuestions === undefined ? undefined : (Array.from(value.frequentlyAskedQuestions as Set<any>).map(InlineResponse200ResponseFrequentlyAskedQuestionsToJSON)),
        'frontDesk': value.frontDesk,
        'gameRoom': value.gameRoom,
        'gender': value.gender,
        'geomodifier': value.geomodifier,
        'giftShop': value.giftShop,
        'golf': value.golf,
        'googleAttributes': value.googleAttributes,
        'googleCoverPhoto': InlineResponse200ResponseGoogleCoverPhotoToJSON(value.googleCoverPhoto),
        'googleMyBusinessLabels': value.googleMyBusinessLabels,
        'googlePlaceId': value.googlePlaceId,
        'googleProfilePhoto': InlineResponse200ResponseGoogleProfilePhotoToJSON(value.googleProfilePhoto),
        'googleWebsiteOverride': value.googleWebsiteOverride,
        'happyHours': InlineResponse200ResponseHappyHoursToJSON(value.happyHours),
        'headshot': InlineResponse200ResponseHeadshotToJSON(value.headshot),
        'hiringOrganization': value.hiringOrganization,
        'holidayHoursConversationEnabled': value.holidayHoursConversationEnabled,
        'horsebackRiding': value.horsebackRiding,
        'hotTub': value.hotTub,
        'hours': InlineResponse200ResponseHoursToJSON(value.hours),
        'housekeeping': value.housekeeping,
        'impressum': value.impressum,
        'indoorPoolCount': value.indoorPoolCount,
        'instagramHandle': value.instagramHandle,
        'insuranceAccepted': value.insuranceAccepted,
        'iosAppUrl': value.iosAppUrl,
        'isClusterPrimary': value.isClusterPrimary,
        'isFreeEvent': value.isFreeEvent,
        'isoRegionCode': value.isoRegionCode,
        'keywords': value.keywords,
        'kidFriendly': value.kidFriendly,
        'kidsClub': value.kidsClub,
        'kidsStayFree': value.kidsStayFree,
        'kitchenHours': InlineResponse200ResponseKitchenHoursToJSON(value.kitchenHours),
        'labels': value.labels,
        'landingPageUrl': value.landingPageUrl,
        'languages': value.languages,
        'lastName': value.lastName,
        'laundry': value.laundry,
        'lazyRiver': value.lazyRiver,
        'lifeguard': value.lifeguard,
        'linkedLocation': value.linkedLocation,
        'localPhone': value.localPhone,
        'localShuttle': value.localShuttle,
        'locatedIn': value.locatedIn,
        'location': InlineResponse200ResponseLocationToJSON(value.location),
        'locationType': value.locationType,
        'logo': InlineResponse200ResponseLogoToJSON(value.logo),
        'mainPhone': value.mainPhone,
        'massage': value.massage,
        'maxAgeOfKidsStayFree': value.maxAgeOfKidsStayFree,
        'maxNumberOfKidsStayFree': value.maxNumberOfKidsStayFree,
        'mealsServed': value.mealsServed,
        'meetingRoomCount': value.meetingRoomCount,
        'menuUrl': InlineResponse200ResponseMenuUrlToJSON(value.menuUrl),
        'menus': InlineResponse200ResponseMenusToJSON(value.menus),
        'middleName': value.middleName,
        'mobilePhone': value.mobilePhone,
        'mobilityAccessible': value.mobilityAccessible,
        'nightclub': value.nightclub,
        'npi': value.npi,
        'nudgeEnabled': value.nudgeEnabled,
        'officeName': value.officeName,
        'onlineServiceHours': InlineResponse200ResponseOnlineServiceHoursToJSON(value.onlineServiceHours),
        'orderUrl': InlineResponse200ResponseOrderUrlToJSON(value.orderUrl),
        'organizerEmail': value.organizerEmail,
        'organizerName': value.organizerName,
        'organizerPhone': value.organizerPhone,
        'outdoorPoolCount': value.outdoorPoolCount,
        'parking': value.parking,
        'paymentOptions': value.paymentOptions,
        'performers': value.performers,
        'petsAllowed': value.petsAllowed,
        'photoGallery': value.photoGallery === undefined ? undefined : ((value.photoGallery as Array<any>).map(InlineResponse200ResponsePhotoGalleryToJSON)),
        'pickupCoordinate': InlineResponse200ResponsePickupCoordinateToJSON(value.pickupCoordinate),
        'pickupHours': InlineResponse200ResponsePickupHoursToJSON(value.pickupHours),
        'priceRange': value.priceRange,
        'primaryConversationContact': value.primaryConversationContact,
        'privateBeach': value.privateBeach,
        'privateCarService': value.privateCarService,
        'productLists': InlineResponse200ResponseProductListsToJSON(value.productLists),
        'products': value.products,
        'questionsAndAnswers': value.questionsAndAnswers,
        'rankTrackingCompetitors': value.rankTrackingCompetitors === undefined ? undefined : (Array.from(value.rankTrackingCompetitors as Set<any>).map(InlineResponse200ResponseRankTrackingCompetitorsToJSON)),
        'rankTrackingEnabled': value.rankTrackingEnabled,
        'rankTrackingFrequency': value.rankTrackingFrequency,
        'rankTrackingQueryTemplates': value.rankTrackingQueryTemplates,
        'rankTrackingSites': value.rankTrackingSites,
        'reservationUrl': InlineResponse200ResponseReservationUrlToJSON(value.reservationUrl),
        'restaurantCount': value.restaurantCount,
        'reviewGenerationUrl': value.reviewGenerationUrl,
        'reviewResponseConversationEnabled': value.reviewResponseConversationEnabled,
        'roomCount': value.roomCount,
        'roomService': value.roomService,
        'routableCoordinate': InlineResponse200ResponseRoutableCoordinateToJSON(value.routableCoordinate),
        'salon': value.salon,
        'sauna': value.sauna,
        'scuba': value.scuba,
        'selfParking': value.selfParking,
        'seniorHours': InlineResponse200ResponseSeniorHoursToJSON(value.seniorHours),
        'serviceArea': InlineResponse200ResponseServiceAreaToJSON(value.serviceArea),
        'serviceAreaPlaces': value.serviceAreaPlaces === undefined ? undefined : (Array.from(value.serviceAreaPlaces as Set<any>).map(InlineResponse200ResponseServiceAreaPlacesToJSON)),
        'services': value.services,
        'smokeFreeProperty': value.smokeFreeProperty,
        'snorkeling': value.snorkeling,
        'socialHour': value.socialHour,
        'spa': value.spa,
        'specialities': value.specialities,
        'tableService': value.tableService,
        'takeoutHours': InlineResponse200ResponseTakeoutHoursToJSON(value.takeoutHours),
        'tennis': value.tennis,
        'thermalPool': value.thermalPool,
        'ticketAvailability': value.ticketAvailability,
        'ticketPriceRange': InlineResponse200ResponseTicketPriceRangeToJSON(value.ticketPriceRange),
        'ticketSaleDateTime': value.ticketSaleDateTime === undefined ? undefined : (value.ticketSaleDateTime.toISOString()),
        'ticketUrl': value.ticketUrl,
        'time': InlineResponse200ResponseTimeToJSON(value.time),
        'timeZoneUtcOffset': value.timeZoneUtcOffset,
        'timezone': value.timezone,
        'tollFreePhone': value.tollFreePhone,
        'treadmill': value.treadmill,
        'ttyPhone': value.ttyPhone,
        'turndownService': value.turndownService,
        'twitterHandle': value.twitterHandle,
        'uberLink': InlineResponse200ResponseUberLinkToJSON(value.uberLink),
        'uberTripBranding': InlineResponse200ResponseUberTripBrandingToJSON(value.uberTripBranding),
        'valetParking': value.valetParking,
        'validThrough': value.validThrough === undefined ? undefined : (value.validThrough.toISOString()),
        'vendingMachine': value.vendingMachine,
        'venueName': value.venueName,
        'videos': value.videos === undefined ? undefined : (Array.from(value.videos as Set<any>).map(InlineResponse200ResponseVideosToJSON)),
        'wadingPool': value.wadingPool,
        'wakeUpCalls': value.wakeUpCalls,
        'walkableCoordinate': InlineResponse200ResponseWalkableCoordinateToJSON(value.walkableCoordinate),
        'waterPark': value.waterPark,
        'waterSkiing': value.waterSkiing,
        'watercraft': value.watercraft,
        'waterslide': value.waterslide,
        'wavePool': value.wavePool,
        'websiteUrl': InlineResponse200ResponseWebsiteUrlToJSON(value.websiteUrl),
        'weightMachine': value.weightMachine,
        'wheelchairAccessible': value.wheelchairAccessible,
        'wifiAvailable': value.wifiAvailable,
        'workRemote': value.workRemote,
        'yearEstablished': value.yearEstablished,
        'yearLastRenovated': value.yearLastRenovated,
        'yextDisplayCoordinate': InlineResponse200ResponseYextDisplayCoordinateToJSON(value.yextDisplayCoordinate),
        'yextDropoffCoordinate': InlineResponse200ResponseYextDropoffCoordinateToJSON(value.yextDropoffCoordinate),
        'yextPickupCoordinate': InlineResponse200ResponseYextPickupCoordinateToJSON(value.yextPickupCoordinate),
        'yextRoutableCoordinate': InlineResponse200ResponseYextRoutableCoordinateToJSON(value.yextRoutableCoordinate),
        'yextWalkableCoordinate': InlineResponse200ResponseYextWalkableCoordinateToJSON(value.yextWalkableCoordinate),
    };
}


