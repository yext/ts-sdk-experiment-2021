/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
/**
 * Area that is served by this location. It may be specified as a radius from the location's address or as a list of cities and/or postal codes.
 * 
 * **Only for Google My Business:** Currently, **serviceArea** is only supported by Google My Business and will not affect your listings on other sites.
 * @export
 * @interface LocationServiceArea
 */
export interface LocationServiceArea {
    /**
     * The distance around the location that the business serves
     * 
     * **NOTE:** This field is no longer supported by Google My Business and is deprecated. We no longer accept or store values for **`radius`**.
     * @type {number}
     * @memberof LocationServiceArea
     */
    radius?: number;
    /**
     * The unit in which radius is measured.
     * 
     * **NOTE:** This field is no longer supported by Google My Business and is deprecated. We no longer accept or store values for **`units`**.
     * @type {string}
     * @memberof LocationServiceArea
     */
    unit?: string;
    /**
     * A list of places served by the location, where each place is either:
     * * a postal code, or
     * * the name of a city.
     * @type {Array<string>}
     * @memberof LocationServiceArea
     */
    places?: Array<string>;
}

export function LocationServiceAreaFromJSON(json: any): LocationServiceArea {
    return LocationServiceAreaFromJSONTyped(json, false);
}

export function LocationServiceAreaFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationServiceArea {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'radius': !exists(json, 'radius') ? undefined : json['radius'],
        'unit': !exists(json, 'unit') ? undefined : json['unit'],
        'places': !exists(json, 'places') ? undefined : json['places'],
    };
}

export function LocationServiceAreaToJSON(value?: LocationServiceArea | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'radius': value.radius,
        'unit': value.unit,
        'places': value.places,
    };
}


