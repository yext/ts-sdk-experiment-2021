/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
/**
 * The entity types the category is available to.
 * @export
 * @interface CategoryEntityTypeAvailability
 */
export interface CategoryEntityTypeAvailability {
    /**
     * 
     * Possible values:
     * * `OPT_IN` Entity types can only be opted in to this category.
     * * `OPT_OUT` Entity types must be specifically opted out of this category.
     * @type {string}
     * @memberof CategoryEntityTypeAvailability
     */
    mode?: string;
    /**
     * 
     * List of entity types that are either opted in or opted out of the category, based on the value of **`mode`**.
     * 
     * **Example**:
     * 
     * If **`mode`** is `OPT_IN` and **`entityTypes`** is `“location”` then only Entities whose **`entityType`** is `location` can have the category assigned to it.
     * 
     * If **`mode`** is `OPT_OUT` and **`entityTypes`** is `[“location”, “atm”]` then the category can be assigned to Entities of any **`entityType`** except `location` or `atm`.
     * @type {Array<string>}
     * @memberof CategoryEntityTypeAvailability
     */
    entityTypes?: Array<string>;
}

export function CategoryEntityTypeAvailabilityFromJSON(json: any): CategoryEntityTypeAvailability {
    return CategoryEntityTypeAvailabilityFromJSONTyped(json, false);
}

export function CategoryEntityTypeAvailabilityFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryEntityTypeAvailability {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'mode': !exists(json, 'mode') ? undefined : json['mode'],
        'entityTypes': !exists(json, 'entityTypes') ? undefined : json['entityTypes'],
    };
}

export function CategoryEntityTypeAvailabilityToJSON(value?: CategoryEntityTypeAvailability | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'mode': value.mode,
        'entityTypes': value.entityTypes,
    };
}


