/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
import {
    Calories,
    CaloriesFromJSON,
    CaloriesFromJSONTyped,
    CaloriesToJSON,
    CommonEclDefinitionsPhoto,
    CommonEclDefinitionsPhotoFromJSON,
    CommonEclDefinitionsPhotoFromJSONTyped,
    CommonEclDefinitionsPhotoToJSON,
    ContentListCost,
    ContentListCostFromJSON,
    ContentListCostFromJSONTyped,
    ContentListCostToJSON,
} from './index.ts';

/**
 * 
 * @export
 * @interface MenuItemAllOf
 */
export interface MenuItemAllOf {
    /**
     * 
     * @type {CommonEclDefinitionsPhoto}
     * @memberof MenuItemAllOf
     */
    photo?: CommonEclDefinitionsPhoto;
    /**
     * 
     * @type {Calories}
     * @memberof MenuItemAllOf
     */
    calories?: Calories;
    /**
     * 
     * @type {ContentListCost}
     * @memberof MenuItemAllOf
     */
    cost?: ContentListCost;
    /**
     * The URL of the item's webpage.
     * @type {string}
     * @memberof MenuItemAllOf
     */
    url?: string;
    /**
     * A list of allergens associated with the menu item. Valid elements are:
     * * Peanuts
     * * Wheat
     * * Sesame
     * * Tree Nuts
     * * Gluten
     * * Soy
     * * Dairy
     * * Eggs
     * * Fish
     * * Shellfish
     * * Shrimp
     * * Crab
     * * Soba
     * @type {Array<string>}
     * @memberof MenuItemAllOf
     */
    allergens?: Array<string>;
    /**
     * Indicates whether the item is a featured item on the menu.
     * @type {boolean}
     * @memberof MenuItemAllOf
     */
    featuredItem?: boolean;
}

export function MenuItemAllOfFromJSON(json: any): MenuItemAllOf {
    return MenuItemAllOfFromJSONTyped(json, false);
}

export function MenuItemAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): MenuItemAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'photo': !exists(json, 'photo') ? undefined : CommonEclDefinitionsPhotoFromJSON(json['photo']),
        'calories': !exists(json, 'calories') ? undefined : CaloriesFromJSON(json['calories']),
        'cost': !exists(json, 'cost') ? undefined : ContentListCostFromJSON(json['cost']),
        'url': !exists(json, 'url') ? undefined : json['url'],
        'allergens': !exists(json, 'allergens') ? undefined : json['allergens'],
        'featuredItem': !exists(json, 'featuredItem') ? undefined : json['featuredItem'],
    };
}

export function MenuItemAllOfToJSON(value?: MenuItemAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'photo': CommonEclDefinitionsPhotoToJSON(value.photo),
        'calories': CaloriesToJSON(value.calories),
        'cost': ContentListCostToJSON(value.cost),
        'url': value.url,
        'allergens': value.allergens,
        'featuredItem': value.featuredItem,
    };
}


