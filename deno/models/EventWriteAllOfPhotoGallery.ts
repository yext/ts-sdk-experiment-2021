/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
import {
    EventWriteAllOfImage,
    EventWriteAllOfImageFromJSON,
    EventWriteAllOfImageFromJSONTyped,
    EventWriteAllOfImageToJSON,
} from './index.ts';

/**
 * 
 * Supported Aspect Ratios:
 * * 1 x 1
 * * 4 x 3
 * * 3 x 2
 * * 5 x 3
 * * 16 x 9
 * * 3 x 1
 * * 2 x 3
 * * 5 x 7
 * * 4 x 5
 * * 4 x 1
 * 
 * **NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.
 * @export
 * @interface EventWriteAllOfPhotoGallery
 */
export interface EventWriteAllOfPhotoGallery {
    /**
     * 
     * @type {string}
     * @memberof EventWriteAllOfPhotoGallery
     */
    clickthroughUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof EventWriteAllOfPhotoGallery
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof EventWriteAllOfPhotoGallery
     */
    details?: string;
    /**
     * 
     * @type {EventWriteAllOfImage}
     * @memberof EventWriteAllOfPhotoGallery
     */
    image: EventWriteAllOfImage;
}

export function EventWriteAllOfPhotoGalleryFromJSON(json: any): EventWriteAllOfPhotoGallery {
    return EventWriteAllOfPhotoGalleryFromJSONTyped(json, false);
}

export function EventWriteAllOfPhotoGalleryFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventWriteAllOfPhotoGallery {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'clickthroughUrl': !exists(json, 'clickthroughUrl') ? undefined : json['clickthroughUrl'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'details': !exists(json, 'details') ? undefined : json['details'],
        'image': EventWriteAllOfImageFromJSON(json['image']),
    };
}

export function EventWriteAllOfPhotoGalleryToJSON(value?: EventWriteAllOfPhotoGallery | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'clickthroughUrl': value.clickthroughUrl,
        'description': value.description,
        'details': value.details,
        'image': EventWriteAllOfImageToJSON(value.image),
    };
}


