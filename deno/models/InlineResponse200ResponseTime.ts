/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
/**
 * Contains the start/end times for the event
 * 
 * Filtering Type: `object`
 * 
 * ```
 * Eligible For: 
 *    * event
 * ```
 * @export
 * @interface InlineResponse200ResponseTime
 */
export interface InlineResponse200ResponseTime {
    /**
     * End date/time of the event, in local time (see timezone field)
     * Standard ISO 8601 datetime without timezone
     * Format: `YYYY-MM-DDThh:mm`
     * 
     * 
     * Filtering Type: `datetime`
     * @type {Date}
     * @memberof InlineResponse200ResponseTime
     */
    end?: Date;
    /**
     * Start date/time of the event, in local time (see timezone field)
     * Standard ISO 8601 datetime without timezone
     * Format: `YYYY-MM-DDThh:mm`
     * 
     * 
     * Filtering Type: `datetime`
     * @type {Date}
     * @memberof InlineResponse200ResponseTime
     */
    start?: Date;
}

export function InlineResponse200ResponseTimeFromJSON(json: any): InlineResponse200ResponseTime {
    return InlineResponse200ResponseTimeFromJSONTyped(json, false);
}

export function InlineResponse200ResponseTimeFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse200ResponseTime {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'end': !exists(json, 'end') ? undefined : (new Date(json['end'])),
        'start': !exists(json, 'start') ? undefined : (new Date(json['start'])),
    };
}

export function InlineResponse200ResponseTimeToJSON(value?: InlineResponse200ResponseTime | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'end': value.end === undefined ? undefined : (value.end.toISOString()),
        'start': value.start === undefined ? undefined : (value.start.toISOString()),
    };
}


