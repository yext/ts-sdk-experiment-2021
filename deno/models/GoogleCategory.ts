/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
import {
    GoogleField,
    GoogleFieldFromJSON,
    GoogleFieldFromJSONTyped,
    GoogleFieldToJSON,
} from './index.ts';

/**
 * 
 * @export
 * @interface GoogleCategory
 */
export interface GoogleCategory {
    /**
     * Google's ID for the category.
     * @type {string}
     * @memberof GoogleCategory
     */
    categoryId?: string;
    /**
     * All category IDs taken from either the business' partner category list, if defined, or otherwise from Yext, that map to this Google category.
     * @type {Array<string>}
     * @memberof GoogleCategory
     */
    clientCategoryIds?: Array<string>;
    /**
     * List of fields for this category.
     * @type {Array<GoogleField>}
     * @memberof GoogleCategory
     */
    fields?: Array<GoogleField>;
}

export function GoogleCategoryFromJSON(json: any): GoogleCategory {
    return GoogleCategoryFromJSONTyped(json, false);
}

export function GoogleCategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): GoogleCategory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'categoryId': !exists(json, 'categoryId') ? undefined : json['categoryId'],
        'clientCategoryIds': !exists(json, 'clientCategoryIds') ? undefined : json['clientCategoryIds'],
        'fields': !exists(json, 'fields') ? undefined : ((json['fields'] as Array<any>).map(GoogleFieldFromJSON)),
    };
}

export function GoogleCategoryToJSON(value?: GoogleCategory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'categoryId': value.categoryId,
        'clientCategoryIds': value.clientCategoryIds,
        'fields': value.fields === undefined ? undefined : ((value.fields as Array<any>).map(GoogleFieldToJSON)),
    };
}


