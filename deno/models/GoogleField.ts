/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
import {
    GoogleOption,
    GoogleOptionFromJSON,
    GoogleOptionFromJSONTyped,
    GoogleOptionToJSON,
} from './index.ts';

/**
 * 
 * @export
 * @interface GoogleField
 */
export interface GoogleField {
    /**
     * Google's display name for the field.
     * @type {string}
     * @memberof GoogleField
     */
    label?: string;
    /**
     * Google's ID for this field.
     * @type {string}
     * @memberof GoogleField
     */
    id?: string;
    /**
     * The name of the group that contains this attribute.
     * @type {string}
     * @memberof GoogleField
     */
    group?: string;
    /**
     * 
     * @type {Array<GoogleOption>}
     * @memberof GoogleField
     */
    options?: Array<GoogleOption>;
}

export function GoogleFieldFromJSON(json: any): GoogleField {
    return GoogleFieldFromJSONTyped(json, false);
}

export function GoogleFieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): GoogleField {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'label': !exists(json, 'label') ? undefined : json['label'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'group': !exists(json, 'group') ? undefined : json['group'],
        'options': !exists(json, 'options') ? undefined : ((json['options'] as Array<any>).map(GoogleOptionFromJSON)),
    };
}

export function GoogleFieldToJSON(value?: GoogleField | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'label': value.label,
        'id': value.id,
        'group': value.group,
        'options': value.options === undefined ? undefined : ((value.options as Array<any>).map(GoogleOptionToJSON)),
    };
}


