/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
/**
 * 
 * @export
 * @interface ReviewComment
 */
export interface ReviewComment {
    /**
     * ID of this comment (assigned by Yext).
     * @type {number}
     * @memberof ReviewComment
     */
    readonly id?: number;
    /**
     * If this comment is in response to another comment, this is the ID of the parent comment.
     * @type {number}
     * @memberof ReviewComment
     */
    parentId?: number;
    /**
     * The timestamp of the comment as reported by the publisher.  If edits impact the comment timestamp on the publisher, then this timestamp may change.  This timestamp always comes from the publisher and we respect whatever they have.
     * @type {number}
     * @memberof ReviewComment
     */
    readonly publisherDate?: number;
    /**
     * The name of the person who wrote the comment (if we have it).
     * @type {string}
     * @memberof ReviewComment
     */
    readonly authorName?: string;
    /**
     * The email address of the person who wrote the comment (if we have it).
     * @type {string}
     * @memberof ReviewComment
     */
    readonly authorEmail?: string;
    /**
     * 
     * @type {string}
     * @memberof ReviewComment
     */
    readonly authorRole?: ReviewCommentAuthorRoleEnum;
    /**
     * Content of the comment.
     * @type {string}
     * @memberof ReviewComment
     */
    content?: string;
    /**
     * Defaults to `PUBLIC` when creating a comment
     * @type {string}
     * @memberof ReviewComment
     */
    visibility?: ReviewCommentVisibilityEnum;
}

/**
* @export
* @enum {string}
*/
export enum ReviewCommentAuthorRoleEnum {
    BusinessOwner = 'BUSINESS_OWNER',
    Consumer = 'CONSUMER'
}/**
* @export
* @enum {string}
*/
export enum ReviewCommentVisibilityEnum {
    Public = 'PUBLIC',
    Private = 'PRIVATE'
}

export function ReviewCommentFromJSON(json: any): ReviewComment {
    return ReviewCommentFromJSONTyped(json, false);
}

export function ReviewCommentFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReviewComment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'parentId': !exists(json, 'parentId') ? undefined : json['parentId'],
        'publisherDate': !exists(json, 'publisherDate') ? undefined : json['publisherDate'],
        'authorName': !exists(json, 'authorName') ? undefined : json['authorName'],
        'authorEmail': !exists(json, 'authorEmail') ? undefined : json['authorEmail'],
        'authorRole': !exists(json, 'authorRole') ? undefined : json['authorRole'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],
    };
}

export function ReviewCommentToJSON(value?: ReviewComment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'parentId': value.parentId,
        'content': value.content,
        'visibility': value.visibility,
    };
}


