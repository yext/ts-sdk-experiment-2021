/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
/**
 * 
 * @export
 * @interface UserAcl
 */
export interface UserAcl {
    /**
     * The Yext Role ID.
     * @type {string}
     * @memberof UserAcl
     */
    roleId?: string;
    /**
     * The Role's Name.
     * @type {string}
     * @memberof UserAcl
     */
    roleName?: string;
    /**
     * The ID of the account, folder, or location that this role gives the user access to.
     * @type {string}
     * @memberof UserAcl
     */
    on?: string;
    /**
     * The ID of the account that contains the folder or location that this role applies to.
     * 
     * If ``onType`` is ``ACCOUNT``, the value of ``accountId`` is the same as the value of ``on``.
     * @type {string}
     * @memberof UserAcl
     */
    accountId?: string;
    /**
     * The type of object that this role gives the user access to.
     * @type {string}
     * @memberof UserAcl
     */
    onType?: UserAclOnTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum UserAclOnTypeEnum {
    Account = 'ACCOUNT',
    Folder = 'FOLDER',
    Location = 'LOCATION'
}

export function UserAclFromJSON(json: any): UserAcl {
    return UserAclFromJSONTyped(json, false);
}

export function UserAclFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserAcl {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roleId': !exists(json, 'roleId') ? undefined : json['roleId'],
        'roleName': !exists(json, 'roleName') ? undefined : json['roleName'],
        'on': !exists(json, 'on') ? undefined : json['on'],
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'onType': !exists(json, 'onType') ? undefined : json['onType'],
    };
}

export function UserAclToJSON(value?: UserAcl | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'roleId': value.roleId,
        'roleName': value.roleName,
        'on': value.on,
        'accountId': value.accountId,
        'onType': value.onType,
    };
}


