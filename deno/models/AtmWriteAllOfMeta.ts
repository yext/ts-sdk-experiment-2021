/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
/**
 * Contains the metadata about the entity.
 * @export
 * @interface AtmWriteAllOfMeta
 */
export interface AtmWriteAllOfMeta {
    /**
     * Country code of this Entity's Language Profile (defaults to the country of the account)
     * @type {string}
     * @memberof AtmWriteAllOfMeta
     */
    countryCode?: string;
    /**
     * The ID of the folder containing this Entity
     * @type {string}
     * @memberof AtmWriteAllOfMeta
     */
    folderId?: string;
    /**
     * ID of this Entity
     * @type {string}
     * @memberof AtmWriteAllOfMeta
     */
    id?: string;
    /**
     * This Entity's labels
     * @type {Array<number>}
     * @memberof AtmWriteAllOfMeta
     */
    labels?: Array<number>;
    /**
     * Language code of this Entity's Language Profile (defaults to the language code of the account)
     * @type {string}
     * @memberof AtmWriteAllOfMeta
     */
    language?: string;
}

export function AtmWriteAllOfMetaFromJSON(json: any): AtmWriteAllOfMeta {
    return AtmWriteAllOfMetaFromJSONTyped(json, false);
}

export function AtmWriteAllOfMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): AtmWriteAllOfMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
        'folderId': !exists(json, 'folderId') ? undefined : json['folderId'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'language': !exists(json, 'language') ? undefined : json['language'],
    };
}

export function AtmWriteAllOfMetaToJSON(value?: AtmWriteAllOfMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'countryCode': value.countryCode,
        'folderId': value.folderId,
        'id': value.id,
        'labels': value.labels,
        'language': value.language,
    };
}


