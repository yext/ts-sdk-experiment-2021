/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
import {
    ComplexImageValueImage,
    ComplexImageValueImageFromJSON,
    ComplexImageValueImageFromJSONTyped,
    ComplexImageValueImageToJSON,
} from './index.ts';

/**
 * The content of the asset.
 * @export
 * @interface ComplexImageValue
 */
export interface ComplexImageValue {
    /**
     * 
     * @type {ComplexImageValueImage}
     * @memberof ComplexImageValue
     */
    image?: ComplexImageValueImage;
    /**
     * A description of the image.
     * @type {string}
     * @memberof ComplexImageValue
     */
    description?: string;
    /**
     * The URL users are directed to after clicking the image.
     * @type {string}
     * @memberof ComplexImageValue
     */
    clickthroughUrl?: string;
}

export function ComplexImageValueFromJSON(json: any): ComplexImageValue {
    return ComplexImageValueFromJSONTyped(json, false);
}

export function ComplexImageValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComplexImageValue {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'image': !exists(json, 'image') ? undefined : ComplexImageValueImageFromJSON(json['image']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'clickthroughUrl': !exists(json, 'clickthroughUrl') ? undefined : json['clickthroughUrl'],
    };
}

export function ComplexImageValueToJSON(value?: ComplexImageValue | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'image': ComplexImageValueImageToJSON(value.image),
        'description': value.description,
        'clickthroughUrl': value.clickthroughUrl,
    };
}


