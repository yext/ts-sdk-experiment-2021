/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ListingAlternateBrands,
    ListingAlternateBrandsFromJSON,
    ListingAlternateBrandsFromJSONTyped,
    ListingAlternateBrandsToJSON,
    ListingStatusDetail,
    ListingStatusDetailFromJSON,
    ListingStatusDetailFromJSONTyped,
    ListingStatusDetailToJSON,
} from './';

/**
 * 
 * @export
 * @interface Listing
 */
export interface Listing {
    /**
     * ID of this listing
     * @type {string}
     * @memberof Listing
     */
    id?: string;
    /**
     * ID of the location associated with this listing
     * @type {string}
     * @memberof Listing
     */
    locationId?: string;
    /**
     * ID of the account associated with this listing
     * @type {string}
     * @memberof Listing
     */
    accountId?: string;
    /**
     * ID of publisher associated with this listing
     * @type {string}
     * @memberof Listing
     */
    publisherId?: string;
    /**
     * 
     * @type {string}
     * @memberof Listing
     */
    status?: ListingStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof Listing
     */
    additionalStatus?: ListingAdditionalStatusEnum;
    /**
     * Listing URL
     * @type {string}
     * @memberof Listing
     */
    listingUrl?: string;
    /**
     * URL where the user can log in to the publisher to manage this listing at that publisher (only returned for Google My Business)
     * @type {string}
     * @memberof Listing
     */
    loginUrl?: string;
    /**
     * URL of a screenshot of the profile page that includes the Featured Message
     * @type {string}
     * @memberof Listing
     */
    screenshotUrl?: string;
    /**
     * List of warnings, or reasons why the listing is unavailable
     * @type {Array<ListingStatusDetail>}
     * @memberof Listing
     */
    statusDetails?: Array<ListingStatusDetail>;
    /**
     * *(only present if the **v** parameter is `20170420` or later)* 
     * 
     * List of Publisher's alternate brands where the listing is syndicated
     * @type {Array<ListingAlternateBrands>}
     * @memberof Listing
     */
    alternateBrands?: Array<ListingAlternateBrands>;
}

/**
* @export
* @enum {string}
*/
export enum ListingStatusEnum {
    WaitingOnYext = 'WAITING_ON_YEXT',
    WaitingOnCustomer = 'WAITING_ON_CUSTOMER',
    WaitingOnPublisher = 'WAITING_ON_PUBLISHER',
    Live = 'LIVE',
    Unavailable = 'UNAVAILABLE',
    OptedOut = 'OPTED_OUT'
}/**
* @export
* @enum {string}
*/
export enum ListingAdditionalStatusEnum {
    Connected = 'CONNECTED',
    NotConnected = 'NOT_CONNECTED'
}

export function ListingFromJSON(json: any): Listing {
    return ListingFromJSONTyped(json, false);
}

export function ListingFromJSONTyped(json: any, ignoreDiscriminator: boolean): Listing {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'locationId': !exists(json, 'locationId') ? undefined : json['locationId'],
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'publisherId': !exists(json, 'publisherId') ? undefined : json['publisherId'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'additionalStatus': !exists(json, 'additionalStatus') ? undefined : json['additionalStatus'],
        'listingUrl': !exists(json, 'listingUrl') ? undefined : json['listingUrl'],
        'loginUrl': !exists(json, 'loginUrl') ? undefined : json['loginUrl'],
        'screenshotUrl': !exists(json, 'screenshotUrl') ? undefined : json['screenshotUrl'],
        'statusDetails': !exists(json, 'statusDetails') ? undefined : ((json['statusDetails'] as Array<any>).map(ListingStatusDetailFromJSON)),
        'alternateBrands': !exists(json, 'alternateBrands') ? undefined : ((json['alternateBrands'] as Array<any>).map(ListingAlternateBrandsFromJSON)),
    };
}

export function ListingToJSON(value?: Listing | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'locationId': value.locationId,
        'accountId': value.accountId,
        'publisherId': value.publisherId,
        'status': value.status,
        'additionalStatus': value.additionalStatus,
        'listingUrl': value.listingUrl,
        'loginUrl': value.loginUrl,
        'screenshotUrl': value.screenshotUrl,
        'statusDetails': value.statusDetails === undefined ? undefined : ((value.statusDetails as Array<any>).map(ListingStatusDetailToJSON)),
        'alternateBrands': value.alternateBrands === undefined ? undefined : ((value.alternateBrands as Array<any>).map(ListingAlternateBrandsToJSON)),
    };
}


