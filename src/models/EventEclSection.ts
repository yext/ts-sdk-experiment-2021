/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BaseEclSection,
    BaseEclSectionFromJSON,
    BaseEclSectionFromJSONTyped,
    BaseEclSectionToJSON,
    EventEclSectionAllOf,
    EventEclSectionAllOfFromJSON,
    EventEclSectionAllOfFromJSONTyped,
    EventEclSectionAllOfToJSON,
    EventItem,
    EventItemFromJSON,
    EventItemFromJSONTyped,
    EventItemToJSON,
} from './';

/**
 * 
 * @export
 * @interface EventEclSection
 */
export interface EventEclSection {
    /**
     * Section ID.
     * @type {string}
     * @memberof EventEclSection
     */
    id?: string;
    /**
     * Section name.
     * @type {string}
     * @memberof EventEclSection
     */
    name?: string;
    /**
     * Section description.
     * @type {string}
     * @memberof EventEclSection
     */
    description?: string;
    /**
     * Section Items.
     * @type {Array<EventItem>}
     * @memberof EventEclSection
     */
    items?: Array<EventItem>;
}

export function EventEclSectionFromJSON(json: any): EventEclSection {
    return EventEclSectionFromJSONTyped(json, false);
}

export function EventEclSectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventEclSection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(EventItemFromJSON)),
    };
}

export function EventEclSectionToJSON(value?: EventEclSection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(EventItemToJSON)),
    };
}


