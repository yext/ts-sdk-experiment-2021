/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LocationWriteAllOfDeliveryHoursFriday,
    LocationWriteAllOfDeliveryHoursFridayFromJSON,
    LocationWriteAllOfDeliveryHoursFridayFromJSONTyped,
    LocationWriteAllOfDeliveryHoursFridayToJSON,
    LocationWriteAllOfDeliveryHoursHolidayHours,
    LocationWriteAllOfDeliveryHoursHolidayHoursFromJSON,
    LocationWriteAllOfDeliveryHoursHolidayHoursFromJSONTyped,
    LocationWriteAllOfDeliveryHoursHolidayHoursToJSON,
    LocationWriteAllOfDeliveryHoursMonday,
    LocationWriteAllOfDeliveryHoursMondayFromJSON,
    LocationWriteAllOfDeliveryHoursMondayFromJSONTyped,
    LocationWriteAllOfDeliveryHoursMondayToJSON,
    LocationWriteAllOfDeliveryHoursSaturday,
    LocationWriteAllOfDeliveryHoursSaturdayFromJSON,
    LocationWriteAllOfDeliveryHoursSaturdayFromJSONTyped,
    LocationWriteAllOfDeliveryHoursSaturdayToJSON,
    LocationWriteAllOfDeliveryHoursSunday,
    LocationWriteAllOfDeliveryHoursSundayFromJSON,
    LocationWriteAllOfDeliveryHoursSundayFromJSONTyped,
    LocationWriteAllOfDeliveryHoursSundayToJSON,
    LocationWriteAllOfDeliveryHoursThursday,
    LocationWriteAllOfDeliveryHoursThursdayFromJSON,
    LocationWriteAllOfDeliveryHoursThursdayFromJSONTyped,
    LocationWriteAllOfDeliveryHoursThursdayToJSON,
    LocationWriteAllOfDeliveryHoursTuesday,
    LocationWriteAllOfDeliveryHoursTuesdayFromJSON,
    LocationWriteAllOfDeliveryHoursTuesdayFromJSONTyped,
    LocationWriteAllOfDeliveryHoursTuesdayToJSON,
    LocationWriteAllOfDeliveryHoursWednesday,
    LocationWriteAllOfDeliveryHoursWednesdayFromJSON,
    LocationWriteAllOfDeliveryHoursWednesdayFromJSONTyped,
    LocationWriteAllOfDeliveryHoursWednesdayToJSON,
} from './';

/**
 * Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.
 * 
 * Each day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.
 * Similarly, holiday delivery hours are represented by the `holidayHours` sub-field.
 * Setting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.
 * SPECIAL CASES:
 * * To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.
 * * To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.
 * * If you are providing `openIntervals`, you may not set `isClosed` to true for that day.
 * @export
 * @interface LocationWriteAllOfDeliveryHours
 */
export interface LocationWriteAllOfDeliveryHours {
    /**
     * 
     * @type {LocationWriteAllOfDeliveryHoursFriday}
     * @memberof LocationWriteAllOfDeliveryHours
     */
    friday?: LocationWriteAllOfDeliveryHoursFriday;
    /**
     * 
     * **NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.
     * 
     * 
     * 
     * Array must be ordered.
     * @type {Set<LocationWriteAllOfDeliveryHoursHolidayHours>}
     * @memberof LocationWriteAllOfDeliveryHours
     */
    holidayHours?: Set<LocationWriteAllOfDeliveryHoursHolidayHours>;
    /**
     * 
     * @type {LocationWriteAllOfDeliveryHoursMonday}
     * @memberof LocationWriteAllOfDeliveryHours
     */
    monday?: LocationWriteAllOfDeliveryHoursMonday;
    /**
     * 
     * Date must be on or after 1970-01-01
     * Date must be before or on 2038-01-01
     * @type {Date}
     * @memberof LocationWriteAllOfDeliveryHours
     */
    reopenDate?: Date;
    /**
     * 
     * @type {LocationWriteAllOfDeliveryHoursSaturday}
     * @memberof LocationWriteAllOfDeliveryHours
     */
    saturday?: LocationWriteAllOfDeliveryHoursSaturday;
    /**
     * 
     * @type {LocationWriteAllOfDeliveryHoursSunday}
     * @memberof LocationWriteAllOfDeliveryHours
     */
    sunday?: LocationWriteAllOfDeliveryHoursSunday;
    /**
     * 
     * @type {LocationWriteAllOfDeliveryHoursThursday}
     * @memberof LocationWriteAllOfDeliveryHours
     */
    thursday?: LocationWriteAllOfDeliveryHoursThursday;
    /**
     * 
     * @type {LocationWriteAllOfDeliveryHoursTuesday}
     * @memberof LocationWriteAllOfDeliveryHours
     */
    tuesday?: LocationWriteAllOfDeliveryHoursTuesday;
    /**
     * 
     * @type {LocationWriteAllOfDeliveryHoursWednesday}
     * @memberof LocationWriteAllOfDeliveryHours
     */
    wednesday?: LocationWriteAllOfDeliveryHoursWednesday;
}

export function LocationWriteAllOfDeliveryHoursFromJSON(json: any): LocationWriteAllOfDeliveryHours {
    return LocationWriteAllOfDeliveryHoursFromJSONTyped(json, false);
}

export function LocationWriteAllOfDeliveryHoursFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocationWriteAllOfDeliveryHours {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'friday': !exists(json, 'friday') ? undefined : LocationWriteAllOfDeliveryHoursFridayFromJSON(json['friday']),
        'holidayHours': !exists(json, 'holidayHours') ? undefined : (new Set((json['holidayHours'] as Array<any>).map(LocationWriteAllOfDeliveryHoursHolidayHoursFromJSON))),
        'monday': !exists(json, 'monday') ? undefined : LocationWriteAllOfDeliveryHoursMondayFromJSON(json['monday']),
        'reopenDate': !exists(json, 'reopenDate') ? undefined : (new Date(json['reopenDate'])),
        'saturday': !exists(json, 'saturday') ? undefined : LocationWriteAllOfDeliveryHoursSaturdayFromJSON(json['saturday']),
        'sunday': !exists(json, 'sunday') ? undefined : LocationWriteAllOfDeliveryHoursSundayFromJSON(json['sunday']),
        'thursday': !exists(json, 'thursday') ? undefined : LocationWriteAllOfDeliveryHoursThursdayFromJSON(json['thursday']),
        'tuesday': !exists(json, 'tuesday') ? undefined : LocationWriteAllOfDeliveryHoursTuesdayFromJSON(json['tuesday']),
        'wednesday': !exists(json, 'wednesday') ? undefined : LocationWriteAllOfDeliveryHoursWednesdayFromJSON(json['wednesday']),
    };
}

export function LocationWriteAllOfDeliveryHoursToJSON(value?: LocationWriteAllOfDeliveryHours | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'friday': LocationWriteAllOfDeliveryHoursFridayToJSON(value.friday),
        'holidayHours': value.holidayHours === undefined ? undefined : (Array.from(value.holidayHours as Set<any>).map(LocationWriteAllOfDeliveryHoursHolidayHoursToJSON)),
        'monday': LocationWriteAllOfDeliveryHoursMondayToJSON(value.monday),
        'reopenDate': value.reopenDate === undefined ? undefined : (value.reopenDate.toISOString().substr(0,10)),
        'saturday': LocationWriteAllOfDeliveryHoursSaturdayToJSON(value.saturday),
        'sunday': LocationWriteAllOfDeliveryHoursSundayToJSON(value.sunday),
        'thursday': LocationWriteAllOfDeliveryHoursThursdayToJSON(value.thursday),
        'tuesday': LocationWriteAllOfDeliveryHoursTuesdayToJSON(value.tuesday),
        'wednesday': LocationWriteAllOfDeliveryHoursWednesdayToJSON(value.wednesday),
    };
}


