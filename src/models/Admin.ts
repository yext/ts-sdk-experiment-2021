/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Admin
 */
export interface Admin {
    /**
     * ID of the entity that the admin belongs to.
     * @type {string}
     * @memberof Admin
     */
    entityId?: string;
    /**
     * ID of the publisher for which the verification is happening.
     * @type {string}
     * @memberof Admin
     */
    publisherId?: string;
    /**
     * If the invitation to this admin is still pending, the email of the admin.
     * If the admin has accepted the invitation and been successfully added, the name of the admin.
     * @type {string}
     * @memberof Admin
     */
    adminName?: string;
    /**
     * 
     * @type {string}
     * @memberof Admin
     */
    role?: AdminRoleEnum;
    /**
     * Indicates whether there is a pending invitation for this admin.
     * @type {boolean}
     * @memberof Admin
     */
    pendingInvitation?: boolean;
}

/**
* @export
* @enum {string}
*/
export enum AdminRoleEnum {
    AdminRoleUnspecified = 'ADMIN_ROLE_UNSPECIFIED',
    Owner = 'OWNER',
    CoOwner = 'CO_OWNER',
    Manager = 'MANAGER',
    CommunityManager = 'COMMUNITY_MANAGER'
}

export function AdminFromJSON(json: any): Admin {
    return AdminFromJSONTyped(json, false);
}

export function AdminFromJSONTyped(json: any, ignoreDiscriminator: boolean): Admin {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'entityId': !exists(json, 'entityId') ? undefined : json['entityId'],
        'publisherId': !exists(json, 'publisherId') ? undefined : json['publisherId'],
        'adminName': !exists(json, 'adminName') ? undefined : json['adminName'],
        'role': !exists(json, 'role') ? undefined : json['role'],
        'pendingInvitation': !exists(json, 'pendingInvitation') ? undefined : json['pendingInvitation'],
    };
}

export function AdminToJSON(value?: Admin | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'entityId': value.entityId,
        'publisherId': value.publisherId,
        'adminName': value.adminName,
        'role': value.role,
        'pendingInvitation': value.pendingInvitation,
    };
}


