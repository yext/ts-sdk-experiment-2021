/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Question,
    QuestionFromJSON,
    QuestionFromJSONTyped,
    QuestionToJSON,
} from './';

/**
 * 
 * @export
 * @interface ListQuestionsReponseResponse
 */
export interface ListQuestionsReponseResponse {
    /**
     * Total number of questions that meet the filter criteria (ignores **`limit`** and **`offset`**)
     * @type {number}
     * @memberof ListQuestionsReponseResponse
     */
    count?: number;
    /**
     * This field is only included if there is an additional page of data to display. To retrieve the next page of data, pass this field's value as the **`pageToken`** parameter in a subsequent request.
     * @type {string}
     * @memberof ListQuestionsReponseResponse
     */
    pageToken?: string;
    /**
     * 
     * @type {Array<Question>}
     * @memberof ListQuestionsReponseResponse
     */
    questions?: Array<Question>;
}

export function ListQuestionsReponseResponseFromJSON(json: any): ListQuestionsReponseResponse {
    return ListQuestionsReponseResponseFromJSONTyped(json, false);
}

export function ListQuestionsReponseResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListQuestionsReponseResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'count': !exists(json, 'count') ? undefined : json['count'],
        'pageToken': !exists(json, 'pageToken') ? undefined : json['pageToken'],
        'questions': !exists(json, 'questions') ? undefined : ((json['questions'] as Array<any>).map(QuestionFromJSON)),
    };
}

export function ListQuestionsReponseResponseToJSON(value?: ListQuestionsReponseResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'count': value.count,
        'pageToken': value.pageToken,
        'questions': value.questions === undefined ? undefined : ((value.questions as Array<any>).map(QuestionToJSON)),
    };
}


