/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BaseEclItem,
    BaseEclItemFromJSON,
    BaseEclItemFromJSONTyped,
    BaseEclItemToJSON,
    CommonEclDefinitionsPhoto,
    CommonEclDefinitionsPhotoFromJSON,
    CommonEclDefinitionsPhotoFromJSONTyped,
    CommonEclDefinitionsPhotoToJSON,
    ContentListCost,
    ContentListCostFromJSON,
    ContentListCostFromJSONTyped,
    ContentListCostToJSON,
    ProductItemAllOf,
    ProductItemAllOfFromJSON,
    ProductItemAllOfFromJSONTyped,
    ProductItemAllOfToJSON,
} from './';

/**
 * 
 * @export
 * @interface ProductItem
 */
export interface ProductItem {
    /**
     * Item ID.
     * @type {string}
     * @memberof ProductItem
     */
    id?: string;
    /**
     * Item name.
     * @type {string}
     * @memberof ProductItem
     */
    name?: string;
    /**
     * Item description.
     * @type {string}
     * @memberof ProductItem
     */
    description?: string;
    /**
     * List of up to 5 photos.
     * @type {Array<CommonEclDefinitionsPhoto>}
     * @memberof ProductItem
     */
    photos?: Array<CommonEclDefinitionsPhoto>;
    /**
     * 
     * @type {ContentListCost}
     * @memberof ProductItem
     */
    cost?: ContentListCost;
    /**
     * Displayed item ID.
     * @type {string}
     * @memberof ProductItem
     */
    idcode?: string;
    /**
     * Product home page
     * @type {string}
     * @memberof ProductItem
     */
    url?: string;
    /**
     * Youtube URL.
     * @type {string}
     * @memberof ProductItem
     */
    video?: string;
}

export function ProductItemFromJSON(json: any): ProductItem {
    return ProductItemFromJSONTyped(json, false);
}

export function ProductItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'photos': !exists(json, 'photos') ? undefined : ((json['photos'] as Array<any>).map(CommonEclDefinitionsPhotoFromJSON)),
        'cost': !exists(json, 'cost') ? undefined : ContentListCostFromJSON(json['cost']),
        'idcode': !exists(json, 'idcode') ? undefined : json['idcode'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'video': !exists(json, 'video') ? undefined : json['video'],
    };
}

export function ProductItemToJSON(value?: ProductItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'photos': value.photos === undefined ? undefined : ((value.photos as Array<any>).map(CommonEclDefinitionsPhotoToJSON)),
        'cost': ContentListCostToJSON(value.cost),
        'idcode': value.idcode,
        'url': value.url,
        'video': value.video,
    };
}


