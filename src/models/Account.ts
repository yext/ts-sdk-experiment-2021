/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Account
 */
export interface Account {
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    accountId?: string;
    /**
     * The number of locations in this account.
     * @type {number}
     * @memberof Account
     */
    readonly locationCount?: number;
    /**
     * The number of sub-accounts directly under this account, if any.
     * @type {number}
     * @memberof Account
     */
    readonly subAccountCount?: number;
    /**
     * Customer-provided ID of the account that this is a sub-account of, if any. Not provided if this is a top-level account.
     * @type {string}
     * @memberof Account
     */
    parentAccountId?: string;
    /**
     * The name of this account.
     * @type {string}
     * @memberof Account
     */
    accountName?: string;
    /**
     * First name of the contact user for this account.
     * @type {string}
     * @memberof Account
     */
    contactFirstName?: string;
    /**
     * Last name of the contact user for this account.
     * @type {string}
     * @memberof Account
     */
    contactLastName?: string;
    /**
     * Phone number of the contact user for this account.
     * @type {string}
     * @memberof Account
     */
    contactPhone?: string;
    /**
     * Email address of the contact user for this account.
     * @type {string}
     * @memberof Account
     */
    contactEmail?: string;
}

export function AccountFromJSON(json: any): Account {
    return AccountFromJSONTyped(json, false);
}

export function AccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): Account {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'locationCount': !exists(json, 'locationCount') ? undefined : json['locationCount'],
        'subAccountCount': !exists(json, 'subAccountCount') ? undefined : json['subAccountCount'],
        'parentAccountId': !exists(json, 'parentAccountId') ? undefined : json['parentAccountId'],
        'accountName': !exists(json, 'accountName') ? undefined : json['accountName'],
        'contactFirstName': !exists(json, 'contactFirstName') ? undefined : json['contactFirstName'],
        'contactLastName': !exists(json, 'contactLastName') ? undefined : json['contactLastName'],
        'contactPhone': !exists(json, 'contactPhone') ? undefined : json['contactPhone'],
        'contactEmail': !exists(json, 'contactEmail') ? undefined : json['contactEmail'],
    };
}

export function AccountToJSON(value?: Account | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountId': value.accountId,
        'parentAccountId': value.parentAccountId,
        'accountName': value.accountName,
        'contactFirstName': value.contactFirstName,
        'contactLastName': value.contactLastName,
        'contactPhone': value.contactPhone,
        'contactEmail': value.contactEmail,
    };
}


