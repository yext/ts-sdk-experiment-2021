/* tslint:disable */
/* eslint-disable */
/**
 * Yext API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UpdateUserRequestAllOf,
    UpdateUserRequestAllOfFromJSON,
    UpdateUserRequestAllOfFromJSONTyped,
    UpdateUserRequestAllOfToJSON,
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserAcl,
    UserAclFromJSON,
    UserAclFromJSONTyped,
    UserAclToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdateUserRequest
 */
export interface UpdateUserRequest {
    /**
     * ID of this User.
     * 
     * Ignored when sent in update requests.
     * @type {string}
     * @memberof UpdateUserRequest
     */
    id: string;
    /**
     * User's first name.
     * @type {string}
     * @memberof UpdateUserRequest
     */
    firstName: string;
    /**
     * User's last name.
     * @type {string}
     * @memberof UpdateUserRequest
     */
    lastName: string;
    /**
     * User's email address.
     * @type {string}
     * @memberof UpdateUserRequest
     */
    emailAddress: string;
    /**
     * User's phone number.
     * @type {string}
     * @memberof UpdateUserRequest
     */
    phoneNumber?: string;
    /**
     * User's preferred email language. Must be a valid locale code (e.g., `en`, `en_UK`, `fr_FR`, `it`, etc.).
     * 
     * If omitted or set to `null`, the default language of the user's country will be used.
     * @type {string}
     * @memberof UpdateUserRequest
     */
    emailLanguagePreference?: string;
    /**
     * User's preferred display language in the Yext platform. Must be a valid locale code (e.g., `en`, `en_UK`, `fr_FR`, `it`, etc.).
     * 
     * If omitted or set to `null`, the browser's default language will be used.
     * @type {string}
     * @memberof UpdateUserRequest
     */
    displayLanguagePreference?: string;
    /**
     * User's last login time in UNIX timestamp
     * @type {string}
     * @memberof UpdateUserRequest
     */
    lastLoginDate?: string;
    /**
     * Indicates whether SAML SSO has been enabled for this user. Omit this field if you are using Signed Link SSO. More information can be found in our [Implementing Single Sign-On](http://developer.yext.com/docs/guides/implementing-single-sign-on/) guide.
     * 
     * Defaults to false.
     * @type {boolean}
     * @memberof UpdateUserRequest
     */
    sso?: boolean;
    /**
     * 
     * @type {Array<UserAcl>}
     * @memberof UpdateUserRequest
     */
    acl?: Array<UserAcl>;
    /**
     * User's username.
     * @type {string}
     * @memberof UpdateUserRequest
     */
    username: string;
}

export function UpdateUserRequestFromJSON(json: any): UpdateUserRequest {
    return UpdateUserRequestFromJSONTyped(json, false);
}

export function UpdateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateUserRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'emailAddress': json['emailAddress'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'emailLanguagePreference': !exists(json, 'emailLanguagePreference') ? undefined : json['emailLanguagePreference'],
        'displayLanguagePreference': !exists(json, 'displayLanguagePreference') ? undefined : json['displayLanguagePreference'],
        'lastLoginDate': !exists(json, 'lastLoginDate') ? undefined : json['lastLoginDate'],
        'sso': !exists(json, 'sso') ? undefined : json['sso'],
        'acl': !exists(json, 'acl') ? undefined : ((json['acl'] as Array<any>).map(UserAclFromJSON)),
        'username': json['username'],
    };
}

export function UpdateUserRequestToJSON(value?: UpdateUserRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'emailAddress': value.emailAddress,
        'phoneNumber': value.phoneNumber,
        'emailLanguagePreference': value.emailLanguagePreference,
        'displayLanguagePreference': value.displayLanguagePreference,
        'lastLoginDate': value.lastLoginDate,
        'sso': value.sso,
        'acl': value.acl === undefined ? undefined : ((value.acl as Array<any>).map(UserAclToJSON)),
        'username': value.username,
    };
}


